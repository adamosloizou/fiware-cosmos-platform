1. Those trailing '...'
   Should be fixed with SIGWINCH and getenv("COLUMNS") ... ?
   Unfortunately it's not that simple ... COLUMNS is changed in father process, but not in the child process ...
   However, there must be a way to fix this ...

2. Wrong type of parenthesis
   Normally '<>' is used for a replacement, like '-f <file name>',
   while '[]' is used for something that is optional, like [-v] ...

   delilah> help set_queue_property
   ...
   DESCRIPTION:  Specify the value of property <property> for queue <queue>
   USAGE:        set_queue_property [queue] [property] [value]

   'USAGE' should be:
   USAGE:        set_queue_property <queue> <property> <value>

   This 'failure' is consistent all over the help ...

4. Typo in text:
    help all -category data
    rm | Remove a queueUsage: rm queue

5. Typo:
   delilah> help set_mode
   DESCRIPTION:  Select delilah working mode: normal ,databse , logs

   Should be:
   DESCRIPTION:  Select delilah working mode: normal, database, logs

6. A <CR> is missing in USAGE
   delilah> help send_alert

     DESCRIPTION:  Send a trace to all conneceted delilah using a random worker as a sender
     USAGE:        send_trace [-worker X] [-error] [-warning] "Message to be sent"      -worker X     Use only this worker as broadcaster
           -error        Mark this trace as an error for correct visualitzation
           -warning      Mark this trace as a warning for correct visualitzation
           message       Use only this worker as broadcaster

   A newline is missing after '"Message to be sent"'.
   Also, visualitzation is not a word ... 'visualization' is ... :-)

7. The DESCRIPTION and USAGE of 'help send_alert'
   'Send a trace' ...
   send_trace [-worker X] ...

   Should probably be 'Send an alert', etc ...
--------------------------------------------------------------
1. Introduction
   Samson is a MapReduce platform, developed for processing large volumes of information (> 1GB daily).
   delilah is its console client, used to connect to and to interact with the Samson platform.

2. delilah console client

'delilah' is the samson shell, used to interact with the samson platform.

Synopsis:
  delilah <IP address> <port> [options]

delilah supports a number of options, the most important being:
  -u                     print usage on the screen and then exit
  -v                     verbose mode - upto five v:s accepted
  --version              print version on the screen and then exit
  -user                  User to connect to SAMSON cluster
  -password              Password to connect to SAMSON cluster
  -memory                memory in GBytes
  -load_buffer_size      load buffer size in MBytes
  -f                     File with commands to execute
  -command               Single command to be executed


delilah is included in the samson package and installed with the rest of the platform.
It is an executable and the supported platforms are:
  o Ubuntu,
  o RedHat,
  o CentOS and
  o MacOS ?

delilah doesn't need to run in any of the nodes of the samson cluster but it does need to be able to connect to all the nodes in the cluster.
In order to tell delilah what cluster to connect to, it's two command line parameters are used.
The port parameter defaults to 1324, which is the default listen port for the samson worker, while the IP-address parameter defaults to 'localhost', i.e. the same node where delilah has been started.

As a shell, delilah offers a number of convenient features, such as:

o history
  Using the cursor keys, the delilah user can easily browse the history of previous commands, to invoke a command previously invoked.
  The history is kept on file, thus survives between sessions.

o auto-completion
  Using the tab key, the delilah user can auto-complete command names, its options, operation names, dataset names etc.


Something about the built-in options here ... ?

2.1 Getting help
    The command to use to get help in delilah is called 'help'.
    Once invoked, the following listing is presented on the screen:

    ============================================================================================================================
     SAMSON v 0.6.1
    ============================================================================================================================
            SAMSON is a distributed platform for efficient processing of unbounded streams of big data
            Authors: Andreu Urruela, J.Gregorio Escalada & Ken Zangelin
            Telefonica I+D 2010-2012
    ----------------------------------------------------------------------------------------------------------------------------
            Type help all [-category category_name] to get help for all available commands
                    Current categories: cluster data delilah local modules push&pop stream
            Type help <command> to get detailed information for a command
    ----------------------------------------------------------------------------------------------------------------------------

    The help categories are:
    o cluster
    o data
    o delilah
    o local
    o modules
    o push&pop
    o stream

    To see the listing of all commands for a category, use the following command:

    delilah> help all -category <category name>

    To see the help of an individual command, use 'help <command name>', for example:
    delilah> help ls

    -------------------------------------------------------------------------------------------------------------------------------------
    ls    ( data )
    -------------------------------------------------------------------------------------------------------------------------------------
    DESCRIPTION:  Show a list of all data queues in the system
    USAGE:        ls [-rates] [-blocks] [-properties] [-group group_field] [<queue name>]
          -rates        Information about total size and current rate
          -blocks       Detailes information about blocks
          -properties   Get properties assigned to queues
          -group X      Group results by a particular field

    -------------------------------------------------------------------------------------------------------------------------------------

2.2 cluster commands

    A SAMSON cluster is a set of SAMSON nodes that work together.
    Nodes can be easily added or removed from a SAMSON cluster using delilah

2.2.1 cluster
    cluster is the delilah command to create clusters and to add/remove nodes to a cluster.
    The cluster command has a number of subcommands:
    o info                                         Show current cluster definition and connection status.
    o connections                                  Show more information about current connections.
    o pending                                      Show pending packets for unconnected workers.
    o connect host [port] [-user X] [-password X]  Connect to another SAMSON cluster instance.
    o add     host [port]                          Add a node to this cluster. A samsond clear instance should be running there.
    o remove  id                                   Remove one of the involved workers. The worker id should be provided (see cluster info).
    o get_my_id                                    Get this delilah identifier (see ls_connections).

    Exercise: create a new samson cluster with three nodes

    1. Make sure a 'free' samson worker is running in each of the nodes. With 'free' is meant that the worker does not belong to any cluster.
       If a samson worker already belongs to a cluster and you wish for it to belong to another cluster, just connect to it using delilah
       and issue the 'cluster info' command. Now you have the 'id' of the node and you can issue the 'cluster remove <id>' command to free the node.

    2. Connect to one of the three nodes (doesn't matter which one you start with), using the 'cluster connect' command.
       As this node is (was) a free node, a cluster containing only this node is created automatically.

    3. Now add the other two nodes, using the 'cluster add' command.

    4. To check that everything has worked out just fine, use the 'cluster info' command and you should see the three nodes.

2.2.2 ls_connections
    The delilah command 'ls_connections' shows a listing with detailed information of all current open connections:

/----------------------------------------------------------------------------------------------------------------------------\
| ls_connections                                                                                                             |
|----------------------------------------------------------------------------------------------------------------------------|
| worker_id | name             | user      | connection | status    |         host | In (B) | Out (B) | In (B/s) | Out (B/s) |
|-----------+------------------+-----------+------------+-----------+--------------+--------+---------+----------+-----------|
|         0 | delilah_9AUbL8zn | anonymous | console    | connected | 10.95.109.98 |   880  |   11.7K |      17  |      297  |
\----------------------------------------------------------------------------------------------------------------------------/


2.3 data commands
    There are seven different delilah command to view and modify data queues and blocks:
    o ls                     Show a list of all data queues in the system
    o rm                     Remove a queue. Usage: rm queue
    o set_queue_property     Specify the value of property <property> for queue <queue>
    o unset_queue_property   Remove a previously defined property property for a queue
    o show_stream_block      Show data activity in a particular stream block
    o ls_blocks              Show the list of data blocks managed in a SAMSON cluster. This is a debug tool
    o ls_buffers             Show the list of data buffers managed in a SAMSON cluster. This is a debug tool

2.3.1 ls
    'ls' is perhaps the most used command in delilah. It is used to see a listing of all data queues in the system and has a number of options:
    -rates        Information about total size and current rate
    -blocks       Detailes information about blocks
    -properties   Get properties assigned to queues
    -group X      Group results by a particular field

    delilah> ls [<queue name>]

2.3.2 rm
    The 'rm' command removes a data queue from the system.

    Synopsis:
    delilah> rm <queue name>

2.3.4 set_queue_property
    Properties of a Samson data queue is a set of variables associated to the queue.
    <An example or two of what properties can accomplish>

    Synopsis:
    delilah> set_queue_property <queue> <property> <value>

2.3.5 unset_queue_property
    The 'unset_queue_property' is used to remove a previously set property for a queue:

    Synopsis:
    delilah> unset_queue_property <queue> <property>

2.3.6 show_stream_block
    The 'show_stream_block' command shows data activity in a particular stream block.
    It shows input and output queues, state queues, stream operations and internal states included in inner stream blocks.

    Synopsis:
    delilah> show_stream_block <path> [-rates]

2.3.7 ls_blocks
    The 'ls_blocks' command shows the list of data blocks managed in the SAMSON cluster.
    This command is a tool used for debugging.

    Synopsis:
    delilah> ls_blocks

2.3.8 ls_buffers
    The 'ls_buffers' command shows the list of data buffers managed in the SAMSON cluster.
    This command is a tool used for debugging.

    Synopsis:
    delilah> ls_buffers

2.4 delilah commands
    The 'delilah' set of command are typically the commands that do not invoke anything outside of the
    delilah executable, i.e. no message is sent to any worker in order to execute these types of commands.
    The exception to this rule are connect/disconnect and wverbose/wdebug

2.4.1 help
    The 'help' command has been extensively described in chapter 2.1

2.4.2 ps
    The 'ps' command is used to view information about delilah processes

    Synopsis:
    delilah> ps [-clear] [<id>]

    The option '-clear', if set, removes all finished or erroneous processes
    If a parameter (id) is sent to the 'ps' command, then extensive information about that process is shown.

2.4.3 set_mode
    The 'set_mode' command is used to select the delilah working mode, that can take one of three values: 'normal', 'database', and 'logs'.

    Synopsis:
    delilah> set_mode <normal|database|logs>

    Here perhaps a short explanation of the three modes ...

2.4.4 set
    The 'set' command is used for setting an environment variable in delilah.

    Synopsis:
    delilah> set [<name>] [<value>]

    When using 'set' without parameters, a listing of all set environment variables is shown.

2.4.5 unset | Remove an environment variable
    The 'unset' command is used for removing an environment variable in delilah.

    Synopsis:
    delilah> unset <name>

2.4.6 connect
    The 'connect' command is used to connect the delilah to a SAMSON cluster or node.

    Synopsis:
    delilah> connect host [-port X] [-user X] [-password X]

2.4.7 disconnect
    The 'disconnect' command is used to disconnect the delilah from its current SAMSON cluster.

    Synopsis:
    delilah> disconnect

2.4.8 alerts
    The 'alerts' command is to activate or deactivate the delilah functionality to show incoming alerts on screen.

    <Short description of what alerts are>
    Alerts in the Samson platform is a mechanism that the samson workers use, to send messages between ...

    Synopsis:
    delilah> alerts <on>|<off>

2.4.9 show_alerts
    The 'show_alerts' command is used to view the list of the last 10 incoming alerts.
    The number of alerts to view can be modified using the built-in option '-lines'

    Synopsis:
    delilah> show_alerts

2.4.10 open_alerts_file
    The 'open_alerts_file' command is used to open a file in the local file system to store all the incoming alerts.
    This file must be closed using the 'close_alerts_file' command.

    Synopsis:
    delilah> open_alerts_file <file name>

2.4.11 close_alerts_file
    The 'close_alerts_file' command is used to close the alerts file, previously opened with the 'open_alerts_file' command.

    Synopsis:
    delilah> close_alerts_file

2.4.12 send_alert
    The 'send_alert' command is used to send an alert to all conneceted delilah using a random worker as sender

    Synopsis:
    delilah> send_alert [-worker X] [-error] [-warning] message

      -worker X     Use only this worker as broadcaster
      -error        Mark this trace as an error for correct visualization
      -warning      Mark this trace as a warning for correct visualization

2.4.13 log
    This command is obsolete and should not be used.
    To view the log files the Samson logClient should be used

2.4.14 trace
    Activate or disactivate trace levels in the Samson cluster.

    Synopsis:
    delilah> trace <on>|<off>

2.4.15 verbose
    The 'verbose' command activates or deactivates verbose mode for the delilah.
    When 'on', extra information for commands executed in delilah is shown on screen.

    Synopsis:
    delilah> verbose <on>|<off>

2.4.16 wverbose
    The 'wverbose' command sets the verbose level for the samson workers in the cluster.
    The higher the number, the more verbose the workers get.

    Synopsis:
    delilah> wverbose <0-5>|<off>

2.4.17 wdebug
    The 'wdebug' command sets the debug level for the samson workers in the cluster.

    Synopsis:
    delilah> wdebug <on>|<off>


2.5 local commands
2.5.1 ls_local
2.5.2 rm_local
2.5.3 history

2.6 module commands
2.6.1 ls_modules
2.6.2 ls_operations
2.6.3 ls_datas
2.6.4 reload_modules
2.6.5 push_module

2.7 push&pop commands
2.7.1 push
2.7.2 pop
2.7.3 connect_to_queue
2.7.4 disconnect_from_queue
2.7.5 ls_local_queues
2.7.6 show_local_queue
2.7.7 push_queue

2.8 stream commands
2.8.1 ls_stream_operations
2.8.2 add_stream_operation
2.8.3 rm_stream_operation
2.8.4 run
2.8.5 cancel_stream_operation
2.8.6 set_stream_operation_property
2.8.7 unset_stream_operation_property
2.8.8 add_queue_connection
2.8.9 rm_queue_connection
2.8.10 ls_queues_connections
2.8.11 ps_stream
2.8.12 ls_workers
2.8.13 init_stream
2.8.14 ps_workers
2.8.15 defrag
