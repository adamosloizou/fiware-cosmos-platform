// csCFD.idl : IDL source for csCFD
//

// This file will be processed by the MIDL tool to
// produce the type library (csCFD.tlb) and marshalling code.

import "oaidl.idl";
import "ocidl.idl";

[
	object,
	uuid(E45F72C2-751A-45FA-85EF-50F881ECB81D),
	dual,
	nonextensible,
	pointer_default(unique)
]
interface ICFDMain : IDispatch{
	[id(1)] HRESULT Init([in] INT lMode);
	[id(2)] HRESULT Cachepath([in] BSTR bstrCachePath);
	[id(3)] HRESULT FilterHostList([in] BSTR bstrHosts);
	[id(4)] HRESULT FilterHostFile([in] BSTR bstrHostFileName);
	[id(5)] HRESULT SetAppsMask([in] INT iAppMask);
	[id(6)] HRESULT DisableNEDOM(void);
	[id(7)] HRESULT ParseDomainFromHost([in] BSTR bstrHost, [out,retval] BSTR* bstrDomain);
	[id(8)] HRESULT ParseURL([in] BSTR bstrURL, [out] BSTR* bstrDomain, [out] BSTR* bstrHost, [out] BSTR* bstrDir, [out] BSTR* bstrPage, [out] BSTR* bstrQueryString);
	[id(9)] HRESULT GetStats([out] LONG* plRecordsLoaded, [out] LONG* plCacheDate, [out] LONG* plNEDOMRecords);
	[id(10)] HRESULT LoadDictionary([in] BSTR bstrDictionaryName);
	[id(11)] HRESULT ApplyDictionary([in] BSTR bstrHost, [in] BSTR bstrQS, [out,retval] LONG* lPatternID);
	[id(12)] HRESULT ApplyDictionaryUsingUrl([in] BSTR bstrURL, [out,retval] LONG* lPatternID);
	[id(13)] HRESULT ApplyDictionary2([in] BSTR bstrHost, [in] BSTR bstrQS, [in] BSTR bstrDomainName, [out,retval] LONG* lPatternID);
	[id(14)] HRESULT ApplyDictionaryUsingUrl2([in] BSTR bstrURL, [in] BSTR bstrDomainName, [out,retval] LONG* lPatternID);
	[id(15)] HRESULT CalculateDomainID([in] BSTR bstrInputString, [out] BSTR* bstrDomainID, [out,retval] LONGLONG* pllDomainID);
	[id(16)] HRESULT CalcMD5([in] BSTR bstrInputString, [out,retval] BSTR* bstrOutputHash);
	[id(17)] HRESULT GetDictionaryList([out,retval] BSTR* bstrDatabaseDictionaryTitles);
	[id(18)] HRESULT ApplyDictionaryAndComputeWeight(BSTR bstrHost, BSTR bstrQS, [out] INT* iWeight, [out,retval] LONG* lPatternID);
	[id(19)] HRESULT ApplyDictionaryUsingUrlAndComputeWeight(BSTR bstrUrl, [out] INT* iWeight, [out,retval] LONG* lPatternID);
	[id(20)] HRESULT ApplyDictionaryAndComputeWeight2(BSTR bstrHost, BSTR bstrQS, BSTR bstrDomainName, [out] INT* iWeight, [out,retval] LONG* lPatternID);
	[id(21)] HRESULT ApplyDictionaryUsingUrlAndComputeWeight2(BSTR bstrUrl, BSTR bstrDomainName, [out] INT* iWeight, [out,retval] LONG* lPatternID);
	[id(22)] HRESULT EnableNonEssentialDomainExclusion(void);
	[id(23)] HRESULT InitFromTermsInDomainFlatFile([in] INT iMode, [in] BSTR bstrTermsInDomainFlatFileName);
	[id(24)] HRESULT LoadDictionary_AdNet([in] BSTR bstrConfiguration, [out,retval] LONG* lRetVal);
	[id(25)] HRESULT ApplyDictionary_AdNet(BSTR bstrRequestURL, BSTR bstrReferURL, [out,retval] LONG* lPatternID);
	[id(26)] HRESULT IsDictionaryChangedInDB([out,retval] BOOL* bResult);
	[id(27)] HRESULT LoadDomainList_String([out] BSTR* bstrDomainList);
	[id(28)] HRESULT LoadDomainList_Array([out] SAFEARRAY(VARIANT)* arrayDomain);
	[id(29)] HRESULT LoadDomainList([out] LONG** handle);
	[id(30)] HRESULT GetNextDomain([in] LONG* handle, [out] BSTR* bstrDomain);
	[id(31)] HRESULT UnloadDomainList(LONG** handle);
	[id(32)] HRESULT GetMode([out,retval] INT* iMode);
	[id(33)] HRESULT GetLoadDictionaryArg([out,retval] BSTR* bstrDictionaryArg);
};
[
	uuid(39E2F010-50A5-4DD7-A8B0-18D8C0DBF9C4),
	version(1.0),
]
library csCFDLib
{
	importlib("stdole2.tlb");
	[		
		uuid(9E5821DB-777E-4D90-9319-23D09C9F27A3)
	]
	coclass CFDMain
	{
		[default] interface ICFDMain;
	};
};

