# .bashrc

# User specific aliases and functions

#alias rm='rm -i'
#alias cp='cp -i'
#alias mv='mv -i'


# Source global definitions
if [ -f /etc/bashrc ]; then
	. /etc/bashrc
fi

#export DISPLAY=pcporctv:0.0

# User specific aliases and functions

# User specific aliases and functions
alias overthetop01="ssh overthetop01 $*"
alias overthetop02="ssh overthetop02 $*"
alias overthetop03="ssh overthetop03 $*"
alias overthetop04="ssh overthetop04 $*"
alias overthetop05="ssh overthetop05 $*"

alias samsonWorker061="${SAMSON_HOME}/bin/samsonWorker -fg -lsHost NO -t215,216 -port 1236"
alias delilah061="${SAMSON_HOME}/bin/delilah overthetop01 1236"

export SAMSON_CLUSTER="overthetop01 overthetop02 overthetop03 overthetop04 overthetop05"

function samsonKillAll()
for machine in `echo $SAMSON_CLUSTER`
do
   echo ${machine}
   ssh ${machine} killall -u samson061 logServer
   ssh ${machine} killall -u samson061 samsonPush
   ssh ${machine} killall -u samson061 samsonPushLogs
   ssh ${machine} killall -u samson061 samsonPop
   ssh ${machine} killall -u samson061 delilah
   ssh ${machine} killall -u samson061 samsonWorker
   ssh ${machine} killall -9 -u samson061 samsonWorker
done

function samsonSpawnAll()
{
	echo "Starting logServer at overthetop05"
	#ssh overthetop05 SAMSON_HOME=/opt/samson061 SAMSON_WORKING=/var/samson/samson061 LOG_DIR=/var/log/samson061 SS_WORKER_LOG_DIR=/var/log/samson061 SS_DELILAH_LOG_DIR=/var/log/samson061 ${SAMSON_HOME}/bin/logServer &
	#sleep 5
	for machine in `echo $SAMSON_CLUSTER`
	do
	   echo ${machine}
	   #ssh ${machine} SAMSON_HOME=/opt/samson061 SAMSON_WORKING=/var/samson/samson061 LOG_DIR=/var/log/samson061 SS_WORKER_LOG_DIR=/var/log/samson061 SS_DELILAH_LOG_DIR=/var/log/samson061 ${SAMSON_HOME}/bin/samsonWorker -port 1236 -lsHost overthetop05
	   ssh ${machine} SAMSON_HOME=/opt/samson061 SAMSON_WORKING=/var/samson/samson061 LOG_DIR=/var/log/samson061 SS_WORKER_LOG_DIR=/var/log/samson061 SS_DELILAH_LOG_DIR=/var/log/samson061 ${SAMSON_HOME}/bin/samsonWorker -port 1236 -log_classic
	done
}

function samsonCleanAll()
for machine in `echo $SAMSON_CLUSTER`
do
   echo ${machine}
   ssh ${machine} "rm ${SAMSON_WORKING}/log/log_stream_state.txt /var/log/samson061/* /var/log/logserver/*"
   ssh ${machine} "rm ${SAMSON_WORKING}/blocks/*0 "
   ssh ${machine} "rm ${SAMSON_WORKING}/blocks/*1 "
   ssh ${machine} "rm ${SAMSON_WORKING}/blocks/*2 "
   ssh ${machine} "rm ${SAMSON_WORKING}/blocks/*3 "
   ssh ${machine} "rm ${SAMSON_WORKING}/blocks/*4 "
   ssh ${machine} "rm ${SAMSON_WORKING}/blocks/*5 "
   ssh ${machine} "rm ${SAMSON_WORKING}/blocks/*6 "
   ssh ${machine} "rm ${SAMSON_WORKING}/blocks/*7 "
   ssh ${machine} "rm ${SAMSON_WORKING}/blocks/*8 "
   ssh ${machine} "rm ${SAMSON_WORKING}/blocks/*9 "
done

function samsonCleanAllAndCluster()
for machine in `echo $SAMSON_CLUSTER`
do
   echo ${machine}
   ssh ${machine} "rm ${SAMSON_WORKING}/log/* /var/log/samson061/* /var/log/logserver/*"
   ssh ${machine} "rm ${SAMSON_WORKING}/blocks/*0 "
   ssh ${machine} "rm ${SAMSON_WORKING}/blocks/*1 "
   ssh ${machine} "rm ${SAMSON_WORKING}/blocks/*2 "
   ssh ${machine} "rm ${SAMSON_WORKING}/blocks/*3 "
   ssh ${machine} "rm ${SAMSON_WORKING}/blocks/*4 "
   ssh ${machine} "rm ${SAMSON_WORKING}/blocks/*5 "
   ssh ${machine} "rm ${SAMSON_WORKING}/blocks/*6 "
   ssh ${machine} "rm ${SAMSON_WORKING}/blocks/*7 "
   ssh ${machine} "rm ${SAMSON_WORKING}/blocks/*8 "
   ssh ${machine} "rm ${SAMSON_WORKING}/blocks/*9 "
done

function psAll()
for machine in `echo $SAMSON_CLUSTER`
do
   echo ${machine}
   ssh ${machine} "ps -l -u samson061 | grep -v grep | egrep 'samsonWorker|delilah|logServer|logClient|samsonPush|samsonPop|streamConnector'"
done

function samsonResetAllDebug()
for machine in `echo $SAMSON_CLUSTER`
do
   echo ${machine}
   ssh ${machine} TRACE="0-199" READS=1 WRITES=1 VERBOSE=1 DEBUG=1 SS_CONTROLLER_VERBOSE=1 SS_CONTROLLER_DEBUG=1 SS_CONTROLLER_READS=1 SS_CONTROLLER_WRITES=1 SS_CONTROLLER_TRACE="0-199" ${SAMSON_HOME}/bin/samsonSpawner -vvvvv -reset $*
done
function runAll()
for machine in `echo $SAMSON_CLUSTER`
do
   echo ${machine}
   ssh ${machine} $*
done
ulimit -c unlimited

