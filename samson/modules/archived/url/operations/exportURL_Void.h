/*
 * Telefónica Digital - Product Development and Innovation
 *
 * THIS CODE AND INFORMATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND,
 * EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR PURPOSE.
 *
 * Copyright (c) Telefónica Investigación y Desarrollo S.A.U.
 * All rights reserved.
 */

/**
 File autogenerated with samsonModuleParser. Please, edit to complete this operation
*/

#ifndef _H_SAMSON_url_exportURL_Void
#define _H_SAMSON_url_exportURL_Void


#include <samson/module/samson.h>


/************************************************************
parserOut exportURL_Void
{
	in url.URL system.Void
	out txt txt

	helpLine "parserOut for URL-Void type data-sets"
}
*************************************************************/

namespace samson{
namespace url{


	class exportURL_Void : public samson::ParserOut
	{
		URL url;


	public:


		void run(KVSetStruct* inputs , TXTWriter *writer )
		{
#ifdef MAX_STR_LEN
#undef MAX_STR_LEN
#endif


#define MAX_STR_LEN 1024
			char output[MAX_STR_LEN];
			//OLM_M(("Starts run for ParserOut exportURL_Void for inputs[0].num_kvs:%d", inputs[0].num_kvs));

			for (size_t i = 0; (i < inputs[0].num_kvs); i++)
			{
				url.parse(inputs[0].kvs[i]->key);

				snprintf(output, MAX_STR_LEN, "%s|%s|%lu|%d\n", url.server.value.c_str(), url.path.value.c_str(), url.user.value, int(url.type.value));

				writer->emit(output);
			}

			//OLM_M(("Ends run for ParserOut exportURL_Void"));
		}


	};


} // end of namespace samson
} // end of namespace url

#endif
