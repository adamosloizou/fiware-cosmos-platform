/*
 * Telefónica Digital - Product Development and Innovation
 *
 * THIS CODE AND INFORMATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND,
 * EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR PURPOSE.
 *
 * Copyright (c) Telefónica Investigación y Desarrollo S.A.U.
 * All rights reserved.
 */

/**
 File autogenerated with samsonModuleParser. Please, edit to complete this operation
*/

#ifndef _H_SAMSON_url_EmitUsersPerCategory
#define _H_SAMSON_url_EmitUsersPerCategory


#include <samson/module/samson.h>


/***************************************************************
map EmitUsersPerCategory
{
	in system.UInt url.CategoryVector # User(id) - CategoryVector
	out system.UInt system.UInt       # Category(id) - User(id)

	helpLine "From the list of categories per user, emits kv pairs with category-User"
}
**************************************************************/

namespace samson{
namespace url{


	class EmitUsersPerCategory : public samson::Map
	{
		samson::system::UInt userId;
		samson::system::UInt catId;
		CategoryVector categories;

	public:


		void run(  samson::KVSetStruct* inputs , samson::KVWriter *writer )
		{
			if (inputs[0].num_kvs == 0)
			{
				return;
			}

			categories.parse(inputs[0].kvs[0]->value);
			size_t weightMedia = CategoryVector::double_2_intScaled(1.0/categories.category_length);

			for (size_t i = 0; (i < inputs[0].num_kvs); i++)
			{
				userId.parse(inputs[0].kvs[i]->key);
				categories.parse(inputs[0].kvs[i]->value);
				for (int k = 0; (k < categories.category_length); k++)
				{
					if (categories.category[k].weight.value > weightMedia)
					{
						//OLM_T(LMT_User06,("Emits catId:%d userId:%d because weight:(%d) > weightMedia(%d)", catId.value, userId.value, categories.category[k].weight.value, weightMedia));
						catId = k;
						writer->emit(0, &catId, &userId);
					}
				}
			}
		}


	};


} // end of namespace samson
} // end of namespace url

#endif
