/*
 * Telefónica Digital - Product Development and Innovation
 *
 * THIS CODE AND INFORMATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND,
 * EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR PURPOSE.
 *
 * Copyright (c) Telefónica Investigación y Desarrollo S.A.U.
 * All rights reserved.
 */

/**
 File autogenerated with samsonModuleParser. Please, edit to complete this operation
*/

#ifndef _H_SAMSON_txt_mongo_data_gen
#define _H_SAMSON_txt_mongo_data_gen


#include <samson/module/samson.h>


namespace samson {
namespace txt_md {


class mongo_data_gen : public samson::Generator
{
public:
	bool active;
	int  mongo_size;
	
	void init(samson::KVWriter* writer)
	{
		string size = environment->get("mongo.size",    "10000");
		mongo_size  = atoi(size.c_str());

		if (mongo_size <= 0)
			mongo_size = 10000;
	}

	void setup( int worker , int num_workers, int process , int num_processes )
	{
		if ((worker == 0)  && (process == 0))
			active = true;
		else
			active = false;
	}

	void run(samson::KVWriter* writer)
	{
		if (!active)
			return;

		samson::system::UInt      key;
		samson::txt_md::BulkData  value;
		
		for (int ix = 0; ix < mongo_size; ix++)
		{
			key.value             = ix;
			value.position.value  = ix * ix;
			value.timestamp.value = ix * ix * ix;

			writer->emit(0, &key, &value);
		}
	}

	void finish(samson::KVWriter* writer)
	{
	}
};


} // end of namespace txt_md
} // end of namespace samson

#endif
