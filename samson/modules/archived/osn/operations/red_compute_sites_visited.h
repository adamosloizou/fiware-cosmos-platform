/*
 * Telefónica Digital - Product Development and Innovation
 *
 * THIS CODE AND INFORMATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND,
 * EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR PURPOSE.
 *
 * Copyright (c) Telefónica Investigación y Desarrollo S.A.U.
 * All rights reserved.
 */

/**
 File autogenerated with samsonModuleParser. Please, edit to complete this operation
*/

#ifndef _H_SAMSON_osn_red_compute_sites_visited
#define _H_SAMSON_osn_red_compute_sites_visited


#include <samson/module/samson.h>
#include <samson/modules/system/Void.h>




namespace samson{
namespace osn{


	class red_compute_sites_visited : public samson::Reduce
	{
		samson::system::String url;
		samson::system::UInt count_in;
		samson::system::UInt key_out;
		samson::osn::Count count_out;

	public:


		void run(  samson::KVSetStruct* inputs , samson::KVWriter *writer )
		{
			samson::system::UInt total;

			if (inputs[0].num_kvs == 0)
			{
				return;
			}

			url.parse(inputs[0].kvs[0]->key );

			total.value = 0;


			for (size_t i=0; (i < inputs[0].num_kvs); i++)
			{
				count_in.parse(inputs[0].kvs[i]->value);
				total.value += count_in.value;
			}

			count_out.count.value = total.value;
			count_out.element.value.assign(url.value);
			key_out.value = 1; // Trying to force all the kv to a single reducer. I have tried with Void, but failed
			writer->emit(0, &key_out, &count_out);
		}

	};


} // end of namespace samson
} // end of namespace osn

#endif
