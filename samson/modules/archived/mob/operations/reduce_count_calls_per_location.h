/*
 * Telefónica Digital - Product Development and Innovation
 *
 * THIS CODE AND INFORMATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND,
 * EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR PURPOSE.
 *
 * Copyright (c) Telefónica Investigación y Desarrollo S.A.U.
 * All rights reserved.
 */

/**
 File autogenerated with samsonModuleParser. Please, edit to complete this operation
 */

#ifndef _H_SAMSON_mob_reduce_count_calls_per_location
#define _H_SAMSON_mob_reduce_count_calls_per_location


#include <samson/module/samson.h>


namespace samson{
namespace mob{

/**
 * Count number of calls sent/received inside
 * a certain location (i.e. cell, BTS or LAC).
 * \n IN: [mob_PhoneLoc,Void]
 * \n OUT: [Uint64,mob_LocCounter]
 *
 * @return Void.
 */
class reduce_count_calls_per_location : public samson::Reduce
{

	// Input[0k]
	PhoneLoc phoneLoc;
	// Output[0k]
	samson::system::UInt phone;
	// Output[0v]
	LocCounter locCounter;
public:


#ifdef INFO_COMMENT //Just to include a comment without conflicting anything
	// If interface changes and you do not recreate this file, consider updating this information (and of course, the module file)

	input: mob.PhoneLoc system.Void
	output: system.UInt mob.LocCounter

	helpLine: Count number of calls indide a certain location.
	extendedHelp: 		Count number of calls indide a certain location.

#endif // de INFO_COMMENT

	void init(samson::KVWriter *writer )
	{
	}

	void run(  samson::KVSetStruct* inputs , samson::KVWriter *writer )
	{
		phoneLoc.parse( inputs[0].kvs[0]->key );
		if( phoneLoc.loc.value != 0 )
		{
			// fill structure
			phone.value = phoneLoc.phone.value;
			locCounter.loc = phoneLoc.loc;
			locCounter.count = inputs[0].num_kvs;

			// emit
			writer->emit(0, &phone, &locCounter );
		}
	}

	void finish(samson::KVWriter *writer )
	{
	}



};


} // end of namespace samson
} // end of namespace mob

#endif
