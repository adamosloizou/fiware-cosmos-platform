Module prime
{
	title	"Prime numbers. Examples with map&reduce"
	author	"Andreu Urruela"
	version "0.1"
}

script test
{
	helpLine "Full test of this module."

	code
	{
		# Remove sets
		rm prime.numbers -f;
		rm prime.numbers_and_multiples -f;
		rm prime.prime_numbers -f ;
		rm prime.all_digits_of_prime_numbers -f;
		rm prime.digits_of_prime_numbers -f;

		# Compute prime numbers
		prime.generate_numbers prime.numbers -create;
		prime.generate_multiples prime.numbers prime.numbers_and_multiples -create;
		prime.filter_primes prime.numbers_and_multiples prime.prime_numbers -create;

		# Get how manu time every digit appears on prime numbers
		prime.emit_digits  prime.prime_numbers prime.all_digits_of_prime_numbers -create;
		prime.count_digits prime.all_digits_of_prime_numbers prime.digits_of_prime_numbers -create;

		# Not interested in this sets
		rm prime.all_digits_of_prime_numbers;

	}

	
}


generator generate_numbers
{
	out system.UInt system.Void	
	helpLine "Generate natural numbers from 1 to prime.limit"
}

map generate_multiples
{
	in  system.UInt system.Void
	out  system.UInt system.Void

	helpLine "Emit the same numbers at the output and the multiple until prime.limit"
}

reduce filter_primes
{
    in  system.UInt system.Void
    out  system.UInt system.Void


	helpLine "Only emit at the output input keys that appear only once... prime numbers"

}

map emit_digits
{
   in  system.UInt system.Void
   out  system.UInt system.Void

   helpLine "Emit each one of the digits in the number. Just for curiosity"

}


reduce count_digits
{
   in  system.UInt system.Void
   out  system.UInt system.UInt	


   helpLine "Group how many times a particular digit appears"

}
