/*
 * Telefónica Digital - Product Development and Innovation
 *
 * THIS CODE AND INFORMATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND,
 * EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR PURPOSE.
 *
 * Copyright (c) Telefónica Investigación y Desarrollo S.A.U.
 * All rights reserved.
 */

/**
 File autogenerated with samsonModuleParser. Please, edit to complete this operation
*/

#ifndef _H_SAMSON_prime_emit_digits
#define _H_SAMSON_prime_emit_digits


#include <samson/module/samson.h>
#include <samson/modules/system/UInt.h>
#include <samson/modules/system/Void.h>


namespace samson{
namespace prime{


	class emit_digits : public samson::Map
	{
	   samson::system::UInt key;
	   samson::system::Void value;


	   samson::system::UInt digit;

	public:


#ifdef INFO_COMMENT //Just to include a comment without conflicting anything
// If interface changes and you do not recreate this file, consider updating this information (and of course, the module file)

input: system.UInt system.Void  
output: system.UInt system.Void

helpLine: Emit each one of the digits in the number. Just for curiosity
#endif // de INFO_COMMENT

		void init(samson::KVWriter *writer )
		{
		}

		void run(  samson::KVSetStruct* inputs , samson::KVWriter *writer )
		{
		   for( size_t i = 0 ; i < inputs[0].num_kvs ; i++)
		   {
			  key.parse( inputs[0].kvs[i]->key );

			  while( key.value > 0 )
			  {
				 digit.value = key.value%10;
				 writer->emit( 0 ,  &digit , &value );
				 
				 key.value = key.value / 10;

			  }


		   }
		}

		void finish(samson::KVWriter *writer )
		{
		}



	};


} // end of namespace prime
} // end of namespace samson

#endif
