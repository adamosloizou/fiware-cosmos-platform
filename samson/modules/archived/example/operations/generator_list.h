/*
 * Telefónica Digital - Product Development and Innovation
 *
 * THIS CODE AND INFORMATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND,
 * EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR PURPOSE.
 *
 * Copyright (c) Telefónica Investigación y Desarrollo S.A.U.
 * All rights reserved.
 */

/**
 File autogenerated with samsonModuleParser. Please, edit to complete this operation
*/

#ifndef _H_SAMSON_example_generator_list
#define _H_SAMSON_example_generator_list


#include <samson/module/samson.h>
#include <samson/modules/example/ExampleData.h>
#include <samson/modules/system/UInt.h>


namespace samson{
namespace example{


	class generator_list : public samson::Generator
	{

	   bool active;

	public:


#ifdef INFO_COMMENT //Just to include a comment without conflicting anything
// If interface changes and you do not recreate this file, consider updating this information (and of course, the module file)

output: system.UInt example.ExampleData

helpLine: Example of how to use list types
#endif // de INFO_COMMENT

		void init( samson::KVWriter *writer )
		{
		}

		void setup( int worker , int num_workers, int process , int num_processes )
		{
		   if( ( worker == 0 ) && ( process == 0 ) )
			  active = true;
		   else
			  active = false;
		}

		void run( samson::KVWriter *writer )
		{

		   if( !active )
			  return;

		   samson::system::UInt key;
		   samson::example::ExampleData value;

		   for ( int i = 0 ; i < 10 ; i ++)
		   {
			  key.value = i;
			  value.list.clear();
			  for (int j = 0 ; j < i ; j++ )
				 value.list.add_back()->value = j;

			  writer->emit( 0 , &key , &value );
		   }


		}

		void finish( samson::KVWriter *writer )
		{
		}



	};


} // end of namespace example
} // end of namespace samson

#endif
