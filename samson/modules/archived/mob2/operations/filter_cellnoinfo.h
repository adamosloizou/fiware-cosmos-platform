/*
 * Telefónica Digital - Product Development and Innovation
 *
 * THIS CODE AND INFORMATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND,
 * EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR PURPOSE.
 *
 * Copyright (c) Telefónica Investigación y Desarrollo S.A.U.
 * All rights reserved.
 */

/**
 File autogenerated with samsonModuleParser. Please, edit to complete this operation
 */

#ifndef _H_SAMSON_mob2_filter_cellnoinfo
#define _H_SAMSON_mob2_filter_cellnoinfo


#include <samson/module/samson.h>
#include <samson/modules/cdr/mobCdr.h>
#include <samson/modules/system/UInt.h>
#include <samson/modules/system/UInt32.h>

#include <stdint.h>

namespace samson{
namespace mob2{


class filter_cellnoinfo : public samson::Map
{
	//Inputs
	samson::system::UInt nodeId;
	samson::cdr::mobCdr cdr;
	//Outputs
	samson::system::UInt32 cellId;

public:


#ifdef INFO_COMMENT //Just to include a comment without conflicting anything
	// If interface changes and you do not recreate this file, consider updating this information (and of course, the module file)

	input: system.UInt cdr.mobCdr
	output: system.UInt32 cdr.mobCdr
	output: system.UInt cdr.mobCdr

	extendedHelp: 		Spread cdrs by cell, and filt them by cellinfo/cellnoinfo
	Input 0: phone - cdr
	Output 0: cdrs with cell info
	Output 1: cdrs without cell info

#endif // de INFO_COMMENT

	void init(samson::KVWriter *writer )
	{
	}

	void run(  samson::KVSetStruct* inputs , samson::KVWriter *writer )
	{
		for(uint64_t i=0; i<inputs[0].num_kvs; i++)
		{
			nodeId.parse(inputs[0].kvs[i]->key);
			cdr.parse(inputs[0].kvs[i]->value);
			cellId.value = cdr.cellId.value;
			if(cdr.cellId.value != 0)
			{
				writer->emit(0, &cellId,&cdr);
			}
			else
			{
				writer->emit(1, &nodeId,&cdr);
			}
		}
	}

	void finish(samson::KVWriter *writer )
	{
	}



};


} // end of namespace mob2
} // end of namespace samson

#endif
