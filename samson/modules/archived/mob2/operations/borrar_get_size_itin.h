
/**
 File autogenerated with samsonModuleParser. Please, edit to complete this operation
*/

#ifndef _H_SAMSON_mob2_borrar_get_size_itin
#define _H_SAMSON_mob2_borrar_get_size_itin


#include <samson/module/samson.h>
#include <samson/modules/mob2/Itinerary.h>
#include <samson/modules/system/Double.h>
#include <samson/modules/system/UInt.h>
#include <samson/modules/system/Void.h>


namespace samson{
namespace mob2{


	class borrar_get_size_itin : public samson::Map
	{
		//Inputs
		Itinerary itinerary;
		//Outputs
		samson::system::UInt size;
		samson::system::Double mean;
		samson::system::Void mr_void;

	public:


#ifdef INFO_COMMENT //Just to include a comment without conflicting anything
// If interface changes and you do not recreate this file, consider updating this information (and of course, the module file)

input: system.UInt mob2.Itinerary  
output: system.UInt system.Void
output: system.UInt system.Void
output: system.Double system.Void

extendedHelp: 		Extract size of itineraries
		Output 0: num of movements
		Output 1: num of different days
		Output 2: mean of movements by day

#endif // de INFO_COMMENT

		void init(samson::KVWriter *writer )
		{
		}

		void run(  samson::KVSetStruct* inputs , samson::KVWriter *writer )
		{
			for(uint64_t i=0; i<inputs[0].num_kvs; i++)
			{
				itinerary.parse(inputs[0].kvs[i]->value);
				size.value = itinerary.num_moves.value;
				writer->emit(0, &size,&mr_void);
				size.value = itinerary.wdays_length;
				writer->emit(1, &size,&mr_void);
				mean.value = double(itinerary.num_moves.value) / double(itinerary.wdays_length);
				writer->emit(2, &mean,&mr_void);
			}
		}

		void finish(samson::KVWriter *writer )
		{
		}



	};


} // end of namespace mob2
} // end of namespace samson

#endif
