/*
 * Telefónica Digital - Product Development and Innovation
 *
 * THIS CODE AND INFORMATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND,
 * EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR PURPOSE.
 *
 * Copyright (c) Telefónica Investigación y Desarrollo S.A.U.
 * All rights reserved.
 */

/**
 File autogenerated with samsonModuleParser. Please, edit to complete this operation
 */

#ifndef _H_SAMSON_mob2_spread_pois_by_node
#define _H_SAMSON_mob2_spread_pois_by_node


#include <samson/module/samson.h>
#include <samson/modules/mob2/Poi.h>
#include <samson/modules/mob2/TwoInt.h>
#include <samson/modules/system/UInt.h>
#include <samson/modules/system/Void.h>


namespace samson{
namespace mob2{

/**** N�mero de pois etiquetadas por cliente ****/
class spread_pois_by_node : public samson::Map
{
	//Inputs
	TwoInt nodbts;
	Poi poi;
	//Outputs
	samson::system::UInt node;
	samson::system::Void mr_void;

public:


#ifdef INFO_COMMENT //Just to include a comment without conflicting anything
	// If interface changes and you do not recreate this file, consider updating this information (and of course, the module file)

	input: mob2.TwoInt mob2.Poi
	output: system.UInt system.Void

	extendedHelp: 		Spread by client confidence of POIs

#endif // de INFO_COMMENT

	void init(samson::KVWriter *writer )
	{
	}

	void run(  samson::KVSetStruct* inputs , samson::KVWriter *writer )
	{
		for(uint64_t i=0; i<inputs[0].num_kvs; i++)
		{
			nodbts.parse(inputs[0].kvs[i]->key);
			poi.parse(inputs[0].kvs[i]->value);
			if(poi.confidentnodebts.value == 1)
			{
				node.value = nodbts.num1.value;
				writer->emit(0, &node,&mr_void);
			}
		}
	}

	void finish(samson::KVWriter *writer )
	{
	}



};


} // end of namespace mob2
} // end of namespace samson

#endif
