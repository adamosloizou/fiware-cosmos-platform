/*
 * Telefónica Digital - Product Development and Innovation
 *
 * THIS CODE AND INFORMATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND,
 * EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR PURPOSE.
 *
 * Copyright (c) Telefónica Investigación y Desarrollo S.A.U.
 * All rights reserved.
 */

/**
 File autogenerated with samsonModuleParser. Please, edit to complete this operation
*/

#ifndef _H_SAMSON_mob2_map_cdrs_to_user_timestamp
#define _H_SAMSON_mob2_map_cdrs_to_user_timestamp


#include <samson/module/samson.h>
#include <samson/modules/cdr/mobCdr.h>
#include <samson/modules/system/UInt.h>


namespace samson{
namespace mob2{


	class map_cdrs_to_user_timestamp : public samson::Map
	{
		//Inputs
		samson::system::UInt node;
		samson::cdr::mobCdr cdr;
		//Outputs
		samson::system::TimeUnix timeStamp;

	public:


#ifdef INFO_COMMENT //Just to include a comment without conflicting anything
// If interface changes and you do not recreate this file, consider updating this information (and of course, the module file)

input: system.UInt cdr.mobCdr  
output: system.UInt system.TimeUnix

extendedHelp: 		From every CDR, emit user and timestamp

#endif // de INFO_COMMENT

		void init(samson::KVWriter *writer )
		{
		}

		void run(  samson::KVSetStruct* inputs , samson::KVWriter *writer )
		{
			for (uint64_t i = 0; (i < inputs[0].num_kvs); i++)
			{
				node.parse(inputs[0].kvs[i]->key);
				cdr.parse(inputs[0].kvs[i]->value);
				timeStamp.value = cdr.timeUnix.value;
				writer->emit(0, &node, &timeStamp);
			}
		}

		void finish(samson::KVWriter *writer )
		{
		}



	};


} // end of namespace mob2
} // end of namespace samson

#endif
