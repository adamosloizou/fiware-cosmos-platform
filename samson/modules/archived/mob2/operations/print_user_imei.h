/*
 * Telefónica Digital - Product Development and Innovation
 *
 * THIS CODE AND INFORMATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND,
 * EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR PURPOSE.
 *
 * Copyright (c) Telefónica Investigación y Desarrollo S.A.U.
 * All rights reserved.
 */

/**
 File autogenerated with samsonModuleParser. Please, edit to complete this operation
 */

#ifndef _H_SAMSON_mob2_print_user_imei
#define _H_SAMSON_mob2_print_user_imei


#include <samson/module/samson.h>
#include <samson/modules/system/UInt.h>


namespace samson{
namespace mob2{


class print_user_imei : public samson::ParserOutReduce
{
	//Inputs
	samson::system::UInt node;
	samson::system::UInt imei;

#ifdef MAX_STR_LEN
#undef MAX_STR_LEN
#endif
#define MAX_STR_LEN 1024
	char output[MAX_STR_LEN];

public:


#ifdef INFO_COMMENT //Just to include a comment without conflicting anything
	// If interface changes and you do not recreate this file, consider updating this information (and of course, the module file)

	input: system.UInt system.UInt

	extendedHelp: 		For every user, prints IMEIs (more than one, if necessary)

#endif // de INFO_COMMENT

	void init(TXTWriter *writer )
	{
	}

	void run(KVSetStruct* inputs , TXTWriter *writer )
	{
		int total = 0;
		uint64_t prev_imei = 0;
		int num_imeis = 0;

		if (inputs[0].num_kvs == 0)
		{
			return;
		}
		node.parse(inputs[0].kvs[0]->key);
		total = snprintf(output, MAX_STR_LEN, "%lu", node.value);
		for (uint64_t i = 0; (i < inputs[0].num_kvs); i++)
		{
			imei.parse(inputs[0].kvs[i]->value);
			if (imei.value != prev_imei)
			{
				total += snprintf(output + total, MAX_STR_LEN-total, "|%lu", imei.value);
				num_imeis++;
				if (total > (MAX_STR_LEN-30))
				{
					break;
				}
				prev_imei = imei.value;
			}
		}
		total += snprintf(output + total, MAX_STR_LEN-total, "|%d\n", num_imeis);
		writer->emit(output);
	}

	void finish(TXTWriter *writer )
	{
	}



};


} // end of namespace mob2
} // end of namespace samson

#endif
