/*
 * Telefónica Digital - Product Development and Innovation
 *
 * THIS CODE AND INFORMATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND,
 * EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR PURPOSE.
 *
 * Copyright (c) Telefónica Investigación y Desarrollo S.A.U.
 * All rights reserved.
 */

/**
 File autogenerated with samsonModuleParser. Please, edit to complete this operation
 */

#ifndef _H_SAMSON_mob2_vector_sum_coms_bts
#define _H_SAMSON_mob2_vector_sum_coms_bts


#include <samson/module/samson.h>
#include <samson/modules/mob2/Bts_Counter.h>
#include <samson/modules/mob2/Node_Bts.h>
#include <samson/modules/mob2/TwoInt.h>
#include <samson/modules/system/Void.h>



namespace samson{
namespace mob2{


class vector_sum_coms_bts : public samson::Reduce
{
	//Inputs
	Bts_Counter counter;
	//Outputs
	Node_Bts nodbts;
	TwoInt hour_comms;       //num1: hour    num2: comms

public:


#ifdef INFO_COMMENT //Just to include a comment without conflicting anything
	// If interface changes and you do not recreate this file, consider updating this information (and of course, the module file)

	input: mob2.Bts_Counter system.Void
	output: mob2.Node_Bts mob2.TwoInt

	extendedHelp: 		Sum number of comms by bts, group and hour

#endif // de INFO_COMMENT

	void init(samson::KVWriter *writer )
	{
	}

	void run(  samson::KVSetStruct* inputs , samson::KVWriter *writer )
	{
		counter.parse(inputs[0].kvs[0]->key);
		nodbts.phone.value = 0;
		nodbts.bts.value = counter.bts.value;
		nodbts.wday.value = counter.wday.value;
		nodbts.range.value = 0;
		hour_comms.num1.value = counter.range.value;
		hour_comms.num2.value = inputs[0].num_kvs;

		writer->emit(0, &nodbts,&hour_comms);
	}

	void finish(samson::KVWriter *writer )
	{
	}



};


} // end of namespace mob2
} // end of namespace samson

#endif
