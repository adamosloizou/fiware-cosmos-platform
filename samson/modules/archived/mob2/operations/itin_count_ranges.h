/*
 * Telefónica Digital - Product Development and Innovation
 *
 * THIS CODE AND INFORMATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND,
 * EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR PURPOSE.
 *
 * Copyright (c) Telefónica Investigación y Desarrollo S.A.U.
 * All rights reserved.
 */

/**
 File autogenerated with samsonModuleParser. Please, edit to complete this operation
 */

#ifndef _H_SAMSON_mob2_itin_count_ranges
#define _H_SAMSON_mob2_itin_count_ranges


#include <samson/module/samson.h>
#include <samson/modules/mob2/ItinRange.h>
#include <samson/modules/mob2/TwoInt.h>
#include <samson/modules/system/Void.h>
#include <stdint.h>



namespace samson{
namespace mob2{


class itin_count_ranges : public samson::Reduce
{
	//Inputs
	ItinRange moveRange;
	samson::system::Double perc_moves;
	//Outputs
	TwoInt wday_count;
	ItinPercMove dist_moves;

public:


#ifdef INFO_COMMENT //Just to include a comment without conflicting anything
	// If interface changes and you do not recreate this file, consider updating this information (and of course, the module file)

	input: mob2.ItinRange system.Double
	output: mob2.ItinRange mob2.ItinPercMove

	extendedHelp: 		Count percentages of movements in a range

#endif // de INFO_COMMENT

	void init(samson::KVWriter *writer )
	{
	}

	void run(  samson::KVSetStruct* inputs , samson::KVWriter *writer )
	{

		double num_moves = 0.0;

		moveRange.parse(inputs[0].kvs[0]->key);

		for(uint64_t i=0; i<inputs[0].num_kvs; i++)
		{
			perc_moves.parse(inputs[0].kvs[i]->value);
			num_moves += perc_moves.value;
		}
		dist_moves.group.value = moveRange.group.value;
		dist_moves.range.value = moveRange.range.value;
		dist_moves.perc_moves.value = num_moves;
		moveRange.group.value = moveRange.range.value = 0;

		writer->emit(0, &moveRange,&dist_moves);
	}

	void finish(samson::KVWriter *writer )
	{
	}



};


} // end of namespace mob2
} // end of namespace samson

#endif
