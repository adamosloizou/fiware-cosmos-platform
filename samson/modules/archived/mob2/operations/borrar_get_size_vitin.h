/*
 * Telefónica Digital - Product Development and Innovation
 *
 * THIS CODE AND INFORMATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND,
 * EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR PURPOSE.
 *
 * Copyright (c) Telefónica Investigación y Desarrollo S.A.U.
 * All rights reserved.
 */

/**
 File autogenerated with samsonModuleParser. Please, edit to complete this operation
*/

#ifndef _H_SAMSON_mob2_borrar_get_size_vitin
#define _H_SAMSON_mob2_borrar_get_size_vitin


#include <samson/module/samson.h>
#include <samson/modules/mob2/ClusterVector.h>
#include <samson/modules/mob2/ItinRange.h>
#include <samson/modules/system/UInt.h>
#include <samson/modules/system/Void.h>


namespace samson{
namespace mob2{


	class borrar_get_size_vitin : public samson::Map
	{
		// Inputs
		ItinRange itr;
	    ClusterVector dist_moves;
		// Outputs
		samson::system::UInt moves;
		samson::system::Void mr_void;

	public:


#ifdef INFO_COMMENT //Just to include a comment without conflicting anything
// If interface changes and you do not recreate this file, consider updating this information (and of course, the module file)

input: mob2.ItinRange mob2.ClusterVector  
output: system.UInt system.Void

extendedHelp: 		Extract num of movements (sum) of a itinerary vector

#endif // de INFO_COMMENT

		void init(samson::KVWriter *writer )
		{
		}

		void run(  samson::KVSetStruct* inputs , samson::KVWriter *writer )
		{
			double sum_moves;

			for(uint64_t i=0; i<inputs[0].num_kvs; i++)
			{
				itr.parse(inputs[0].kvs[i]->key);
				dist_moves.parse(inputs[0].kvs[i]->value);
				sum_moves = 0;

				for(int j=0; j<dist_moves.coms_length; j++)
				{
					sum_moves += dist_moves.coms[j].value;
				}
				moves.value = sum_moves + 0.1;
				writer->emit(0, &moves,&mr_void);
			}
		}

		void finish(samson::KVWriter *writer )
		{
		}



	};


} // end of namespace mob2
} // end of namespace samson

#endif
