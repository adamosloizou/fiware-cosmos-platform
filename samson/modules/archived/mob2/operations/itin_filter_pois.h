
/**
 File autogenerated with samsonModuleParser. Please, edit to complete this operation
 */

#ifndef _H_SAMSON_mob2_itin_filter_pois
#define _H_SAMSON_mob2_itin_filter_pois


#include <samson/module/samson.h>
#include <samson/modules/mob2/Bts_Counter.h>
#include <samson/modules/mob2/ItinTime.h>
#include <samson/modules/mob2/TwoInt.h>
#include <samson/modules/system/UInt.h>



namespace samson{
namespace mob2{


class itin_filter_pois : public samson::Reduce
{
	// Inputs
	TwoInt node_bts;
	ItinTime it_time;
	// Outputs
	samson::system::UInt node;

public:


#ifdef INFO_COMMENT //Just to include a comment without conflicting anything
	// If interface changes and you do not recreate this file, consider updating this information (and of course, the module file)

	input: mob2.TwoInt mob2.ItinTime
	input: mob2.TwoInt mob2.Bts_Counter
	output: system.UInt mob2.ItinTime

	extendedHelp: 		Filter cdrs to the pois of a client
	Input 0: Cdrs with bts info
	Input 1: Pois of clients
	Output 0: Cdrs with POI

#endif // de INFO_COMMENT

	void init(samson::KVWriter *writer )
	{
	}

	void run(  samson::KVSetStruct* inputs , samson::KVWriter *writer )
	{
		for(uint64_t i=0; i<inputs[1].num_kvs; i++)
		{
			node_bts.parse(inputs[1].kvs[i]->key);
			node.value = node_bts.num1.value;

			for(uint64_t j=0; j<inputs[0].num_kvs; j++)
			{
				it_time.parse(inputs[0].kvs[j]->value);
				writer->emit(0, &node,&it_time);
			}
		}

	}

	void finish(samson::KVWriter *writer )
	{
	}



};


} // end of namespace mob2
} // end of namespace samson

#endif
