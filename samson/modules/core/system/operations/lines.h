
/**
 File autogenerated with samsonModuleParser. Please, edit to complete this operation
*/

#ifndef _H_SAMSON_system_lines
#define _H_SAMSON_system_lines


#include <samson/module/samson.h>


namespace samson{
namespace system{


	class lines : public samson::Splitter
	{

	public:


//  INFO_MODULE
// If interface changes and you do not recreate this file, you will have to update this information (and of course, the module file)
// Please, do not remove this comments, as it will be used to check consistency on module declaration
//
//  
// helpLine: Parse input keeping lines toguether
//  END_INFO_MODULE

	   int split( char * inData, size_t inLength , bool finished , char ** nextData , SplitterEmitter* emitter )
	   {
		  // Return all completed lines ( not partial lines )

          // Search for the last return		  
		  for ( size_t i = 0  ; i < inLength; i++ )
		  {
			 if( inData[inLength -1 - i] == '\n' )
			 {
                // Emit all completed lines
				emitter->emit( inData , 1 + inLength -1 - i ); 
				
                // Point to the begin of non-used data
				*nextData = &inData[1+inLength -1 - i ];				 				 

				// Return OK
				return 0;
			 }
			 
		  }
		  
		  // Not possible to find a return in the entire buffer, not process anything
		  *nextData = inData; // Keep all input buffer
		  return 0;		  
	   }	   	   

	};


} // end of namespace system
} // end of namespace samson

#endif
