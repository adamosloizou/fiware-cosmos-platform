/*
 * Telefónica Digital - Product Development and Innovation
 *
 * THIS CODE AND INFORMATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND,
 * EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR PURPOSE.
 *
 * Copyright (c) Telefónica Investigación y Desarrollo S.A.U.
 * All rights reserved.
 */

/**
 File autogenerated with samsonModuleParser. Please, edit to complete this operation
*/

#ifndef _H_SAMSON_shop_export_to_txt
#define _H_SAMSON_shop_export_to_txt


#include <samson/module/samson.h>
#include <samson/modules/shop/VectorProducts.h>
#include <samson/modules/system/UInt.h>


namespace samson{
namespace shop{


	class export_to_txt : public samson::ParserOut
	{
        std::ostringstream output;
        samson::system::UInt key;
        samson::shop::VectorProducts value;

	public:


#ifdef INFO_COMMENT //Just to include a comment without conflicting anything
// If interface changes and you do not recreate this file, consider updating this information (and of course, the module file)

input: system.UInt shop.VectorProducts  

helpLine: Export system.UInt shop.VectorProducts key-values in a standard format. Use shop.separator to custommize separator
#endif // de INFO_COMMENT

		void init( TXTWriter *writer )
		{
		}

		void run( KVSetStruct* inputs , TXTWriter *writer )
		{
            std::string separator = environment->get( "shop.separator" , ":" );

            for (size_t i = 0; (i < inputs[0].num_kvs); i++)
            {
                    key.parse( inputs[0].kvs[i]->key );
                    value.parse( inputs[0].kvs[i]->value );

                    output.str(""); // Clear content

                    output << "User:" << key.str() << " products" << separator;
                    for (int j = 0; (j < value.products_length);j++)
                    {
                            output << value.products[j].str() << ",";
                    }
                    output << std::endl;

                    writer->emit(output.str());
            }
		}

		void finish( TXTWriter *writer )
		{
		}



	};


} // end of namespace shop
} // end of namespace samson

#endif
