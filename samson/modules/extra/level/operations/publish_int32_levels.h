
/**
 File autogenerated with samsonModuleParser. Please, edit to complete this operation
*/

#ifndef _H_SAMSON_level_publish_int32_levels
#define _H_SAMSON_level_publish_int32_levels


#include <samson/module/samson.h>
#include <samson/modules/system/Int32.h>
#include <samson/modules/system/String.h>


namespace samson{
namespace level{


	class publish_int32_levels : public samson::ParserOut
	{

	public:


//  INFO_MODULE
// If interface changes and you do not recreate this file, you will have to update this information (and of course, the module file)
// Please, do not remove this comments, as it will be used to check consistency on module declaration
//
//  input: system.String system.Int32  
//  
// helpLine: Get a txt version of content
//  END_INFO_MODULE

		void init( TXTWriter *writer )
		{
		}

		void run( KVSetStruct* inputs , TXTWriter *writer )
		{
		   samson::system::String key;
		   samson::system::Int32 value;

		   char line[1024];

		   for (size_t i=0 ; i<inputs[0].num_kvs ; i++ )
		   {
			  key.parse( inputs[0].kvs[i]->key );
			  value.parse( inputs[0].kvs[i]->value );

			  sprintf( line , "%s %d\n" , key.value.c_str() , value.value );
			  LM_M(("Published: %s", line));

			  writer->emit( line );			  
		   }

		}

		void finish( TXTWriter *writer )
		{
		}



	};


} // end of namespace level
} // end of namespace samson

#endif
