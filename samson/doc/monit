MONIT
===============================================================================

Installation:
-------------------------------------------------------------------------------
% aptitude install monit



Configuration:
-------------------------------------------------------------------------------
Edit /etc/monit/monitrc as 'root':

#
# Make monit run as daemon process, checking processes every 20 seconds, initially after 20 seconds
#
set daemon 10 with start delay 20

#
# Make monit print traces to the file '/var/log/monit'
#
set logfile /var/log/monit


#
# Make monit use its embedded web server (to view status of monitored services and to manage the services):
#
set httpd port 2812 and use address localhost  # only accept connection from localhost
     allow localhost               # allow localhost to connect to the server and
     allow admin:monit             # allow user 'admin' with password 'monit'
     allow kzangeli:ken
     allow jges:goyo
     allow grant:grant
     allow andreu:andreu readonly


#
# Configure mail ...
#
set mailserver correo.tid.es
set alert kzangeli@tid.es
set alert samson-dev@tid.es



#
# Make monit monitor CPU, RAM and DISK usage and to send a mail when resources are scarse
#
check system system_torkel
  if loadavg(1min) > 5 then alert
  if loadavg(5min) > 10 then alert
  if loadavg(1min) > 20 then alert
  if memory usage > 75% then alert
  if cpu usage (user)   > 70% for 3 cycles then alert
  if cpu usage (system) > 30% for 3 cycles then alert
  if cpu usage (wait)   > 20% for 3 cycles then alert



#
# Make monit start and supervise the 'test' process monitTest, as user 'kzangeli'
#
check process monitTest with pidfile /tmp/monitTest.pid
      start program = "/home/kzangeli/monitTest"
                      as uid kzangeli and gid kzangeli
      stop program = "/bin/kill $(cat /tmp/monitTest.pid)"
                      as uid kzangeli and gid kzangeli



#
# Make monit start and supervise the process 'samsonWorker':, as user 'samson'
# Also, make monit send a mail when samsonWorker dies of when it uses too much CPU
# Instead of alerting, you can also run scripts, or restart the process ...
#
check process samsonWorker with pidfile /var/log/samson/samsond.pid
      start program = "/opt/samson/bin/samsonWorker -vvvvv"
                      as uid samson and gid samson
      stop program = "/bin/kill $(cat /var/log/samson/samsond.pid)"
                      as uid samson and gid samson
      if cpu      > 80%        for 3 cycles then alert
      if totalmem > 1500.0 MB  for 5 cycles then alert
      if cpu usage > 95%       for 5 cycles then restart
      if cpu usage > 99%       for 5 cycles then exec "/bin/bash /home/kzangeli/cpuUsageTooHighForWorker"
      if failed port 9898 protocol http then alert



#
# Make monit send an alert when the samson configuration file changes
#
# [ Would be nice having it restart the worker in case of a change ... ? ]
#
check file setup.txt with path /var/samson/etc/setup.txt
  if changed checksum then alert


# Move parts of configuration file to conf.d directory
    To have things a little more ordered, you can create a separate file for all 'sub orders' and then include the files:
    include /etc/monit/conf.d/*



Startup:
-------------------------------------------------------------------------------
% sudo monit -t  # just to check that the config file is OK
% sudo monit -v  # or without '-v' ...

    OR

% service monit start

[ monit -h for 'help' ]

% sudo monit -c <path> # to specify the control file

% sudo monit quit # to stop the process



Web Connection
-------------------------------------------------------------------------------
% google-chrome http://10.95.138.14:2812 # doesn't work ...



Command line Status
-------------------------------------------------------------------------------
% sudo monit status



M/Monit
-------------------------------------------------------------------------------
To manage all the monit processes from one unique Web interface
There is actually an iphone app for M/Monit ... :-)
They are working on a change in the web layout to be mobile web friendly, 
so that no special app is needed.
When this is done, any web-capable device (android, blackberry, windoze phone, etc)
will be able to monitor the system