#ifndef PACKET_H
#define PACKET_H

/* ****************************************************************************
*
* FILE                      packet.h
*
* DESCRIPTION				Definition of the packet to be exchanged in the samson-ecosystem
*
*/
#include <assert.h>	         // assert

#include "MemoryManager.h"   // MemoryManager
#include "samson.pb.h"       // google protocol buffers
#include "Endpoint.h"        // Endpoint



namespace ss {
	
	class Endpoint;
	class Buffer;
	
	/*
	 Not used any more... now we use Buffer generated by MemoryManager
	 
	class PacketBuffer
	{
		char*  data;
		size_t length;

	public:
		
		PacketBuffer()
		{
			data = NULL;
			length = 0;
		}
		
		~PacketBuffer()
		{
			free();
		}

		void initPacketBuffer( size_t _length )
		{
			assert( data == NULL);
			data = (char*)malloc(_length);
			length = _length;
		}
		
		void free()
		{
			if( data )
			{
				::free( data );
				data = NULL;
				length = 0;
			}
		}		
		
		char* getDataPointer()
		{
			return data;
		}
		
		size_t getLength()
		{
			return length;
		}
		
	};
	 */
	
	/** 
	 Unique packet type sent over the network between controller, samson and delilah
	 */

	class Packet
	{
	public:
		network::Message message;		// Message with necessary fields ( codified with Google Protocol Buffers )
		Buffer* buffer;					// Data for key-values
		
		Packet() 
		{
			buffer = NULL;
		};

		~Packet()
		{
		}
	};
}

#endif
