
/**
 File autogenerated with samsonModuleParser. Please, edit to complete this operation
*/

#ifndef _H_SAMSON_hit_export_hit_collection
#define _H_SAMSON_hit_export_hit_collection


#include <time.h>

#include <samson/module/samson.h>
#include <samson/modules/hit/HitCollection.h>
#include <samson/modules/system/String.h>


namespace samson{
namespace hit{


	class export_hit_collection : public samson::ParserOut
	{

	   samson::system::String concept;
	   samson::hit::HitCollection hit_collection;

	public:


//  INFO_MODULE
// If interface changes and you do not recreate this file, you will have to update this information (and of course, the module file)
// Please, do not remove this comments, as it will be used to check consistency on module declaration
//
//  input: system.String hit.HitCollection  
//  
// helpLine: Export the top list of elements
//  END_INFO_MODULE

		void init( TXTWriter *writer )
		{
		}

		void run( KVSetStruct* inputs , TXTWriter *writer )
		{
		   for ( size_t i = 0 ; i < inputs[0].num_kvs ; i++ )
		   {
			  concept.parse( inputs[0].kvs[i]->key );
			  hit_collection.parse( inputs[0].kvs[i]->value );

			  std::ostringstream output;

			  output << concept.value << " ";
			  
			  for ( int i = 0 ; i < hit_collection.hits_length ; i ++ )
			  {
				 std::string concept = hit_collection.hits[i].concept.value;
				 size_t count = hit_collection.hits[i].count.value; // convert to ingeger for displaying....
				 output << concept << " " << count << " ";
			  }

			  output << "\n";

			  writer->emit( output.str() );

		   }

		}

		void finish( TXTWriter *writer )
		{
		}



	};


} // end of namespace hit
} // end of namespace samson

#endif
