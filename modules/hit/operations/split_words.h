
/**
 File autogenerated with samsonModuleParser. Please, edit to complete this operation
*/

#ifndef _H_SAMSON_hit_split_words
#define _H_SAMSON_hit_split_words


#include <samson/module/samson.h>
#include <samson/modules/system/String.h>
#include <samson/modules/system/UInt.h>


namespace samson{
namespace hit{


	class split_words : public samson::Map
	{

	public:


//  INFO_MODULE
// If interface changes and you do not recreate this file, you will have to update this information (and of course, the module file)
// Please, do not remove this comments, as it will be used to check consistency on module declaration
//
//  input: system.String system.UInt  
//  output: system.String system.UInt
//  
// helpLine: Duplicate some concepts like date, mail, ..... Ouput words are mail_XXX date_XXX
//  END_INFO_MODULE

		void init( samson::KVWriter *writer )
		{
		}

		void run( samson::KVSetStruct* inputs , samson::KVWriter *writer )
		{

		   samson::system::String word;
		   samson::system::UInt count;

		   samson::system::String word_mail;

		   for ( size_t i = 0 ; i < inputs[0].num_kvs ; i++)
		   {
			  word.parse( inputs[0].kvs[i]->key );
			  count.parse( inputs[0].kvs[i]->value );


			  // Detect mail...

			  if( word.isMail() )
			  {
				 word_mail.value = "mail " + word.value;
				 writer->emit( 0 , &word_mail , &count );				 
			  }


			  writer->emit( 0 , &word, &count );
		   }

		}

		void finish( samson::KVWriter *writer )
		{
		}



	};


} // end of namespace hit
} // end of namespace samson

#endif
