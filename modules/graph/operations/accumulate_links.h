
/**
 File autogenerated with samsonModuleParser. Please, edit to complete this operation
*/

#ifndef _H_SAMSON_graph_accumulate_links
#define _H_SAMSON_graph_accumulate_links

#include <iostream>

#include <samson/module/samson.h>
#include <samson/modules/system/UInt.h>
#include <samson/modules/system/UInt2.h>
#include <samson/modules/system/Void.h>


namespace samson{
namespace graph{


	class accumulate_links : public samson::Reduce
	{

	public:

	  samson::system::UInt2 key;
	  samson::system::UInt value;

		void run(  samson::KVSetStruct* inputs , samson::KVWriter *writer )
		{
		  //std::cout << "Process " << inputs[0].num_kvs << " & " << inputs[1].num_kvs << "\n";

		  if( inputs[0].num_kvs > 0 )
		    key.parse( inputs[0].kvs[0]->key );
		  else if( inputs[1].num_kvs > 0 )
		    key.parse( inputs[1].kvs[0]->key );
		  else
		    return;


		  if( inputs[1].num_kvs > 0)
		  {
		    assert( inputs[1].num_kvs == 1 );
		    value.parse( inputs[1].kvs[0]->value );
		  }
		  else
		    value.value = 0;

		  value.value += inputs[0].num_kvs;  // Accumulate the number of time we have the same pair at the input

		  writer->emit(0 , &key, &value);

		}


	};


} // end of namespace samson
} // end of namespace graph

#endif
