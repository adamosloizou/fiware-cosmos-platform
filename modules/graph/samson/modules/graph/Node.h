
/**
 File autogenerated with samsonModuleParser. Please, edit to complete this data
*/

#ifndef _H_SAMSON_graph_Node
#define _H_SAMSON_graph_Node


#include <samson/modules/graph/Node_base.h>
#include <cstring>

#define GRAPH_FLAG_EXTERN	1

namespace samson{
namespace graph{

	class Node : public Node_base
	{
		
	public:
		
		double weightOfLinkWithId( size_t id )
		{
			for (int i = 0 ; i < links_length ; i++)
				if ( links[i].id == id )
					return links[i].getWeight();
			
			return 0;
			
		}
		
		int numberOfLinksWithWeightEqualOrHigher( double weight )
		{
			int counter = 0;
			
			for (int i = 0 ; i  < links_length ; i++)
				if( links[i].getWeight() >= weight )
					counter++;
			
			return counter;
			
		}
		
		std::string str()
		{
			std::ostringstream output;
			output << id.value << " ";
			output << "[";
			
			for (int i = 0 ; i < links_length ; i++)
				output << links[i].id.value << " (" << links[i].getWeight() << ") ";
			
			output << "]";
			
			if( flags.value & GRAPH_FLAG_EXTERN)
				output << " EXTERN";
			
			return output.str();
		}
		
		
	};


} // end of namespace samson
} // end of namespace graph

#endif
