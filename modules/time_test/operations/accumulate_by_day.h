
/**
 File autogenerated with samsonModuleParser. Please, edit to complete this operation
*/

#ifndef _H_SAMSON_time_test_accumulate_by_day
#define _H_SAMSON_time_test_accumulate_by_day


#include <samson/module/samson.h>
#include <samson/modules/system/UInt.h>
#include <samson/modules/system/UInt8.h>



namespace samson{
namespace time_test{


	class accumulate_by_day : public samson::Reduce
	{

	public:


		void run(  samson::KVSetStruct* inputs , samson::KVWriter *writer )
		{
			samson::system::UInt8 day;
			samson::system::UInt amount;
			samson::system::UInt accum;

			day.parse(inputs[0].kvs[0]->key);
			accum.value = 0;
			OLM_T(LMT_User06, ("day:%d, inputs[0].num_kvs:%lu\n", day.value, inputs[0].num_kvs));
			for (size_t i = 0; (i < inputs[0].num_kvs); i++)
			{
				amount.parse(inputs[0].kvs[i]->value);
				//OLM_T(LMT_User06, ("day:%d, amount:%lu\n", day.value, amount.value));

				accum.value += amount.value;
			}

			writer->emit( 0 , &day, &accum);
		}
	};


} // end of namespace samson
} // end of namespace time_test

#endif
