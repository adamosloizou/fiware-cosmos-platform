
/**
 File autogenerated with samsonModuleParser. Please, edit to complete this operation
*/

#ifndef _H_SAMSON_time_test_map_by_day
#define _H_SAMSON_time_test_map_by_day


#include <samson/module/samson.h>
#include <samson/modules/system/TimeUnix.h>
#include <samson/modules/system/UInt.h>
#include <samson/modules/system/UInt8.h>



namespace samson{
namespace time_test{


	class map_by_day : public samson::Map
	{

#define MAX_STR_LEN 1024
                char output[MAX_STR_LEN];

	public:


		void run(  samson::KVSetStruct* inputs , samson::KVWriter *writer )
		{
			samson::system::TimeUnix tm;
			struct tm timeCalendar;
			samson::system::UInt amount;
			samson::system::UInt8 day;

			//OLM_T(LMT_User06, ("inputs[0].num_kvs:%lu\n", inputs[0].num_kvs));
			for (size_t i = 0; (i < inputs[0].num_kvs); i++)
			{
				tm.parse(inputs[0].kvs[i]->key);
				amount.parse( inputs[0].kvs[i]->value );

				tm.getCalendarFromTimeUTC(&timeCalendar);


				day.value = timeCalendar.tm_wday;

				//if (i%1000 == 0)
				//{
					//asctime_r(&timeCalendar, output);
					//output[strlen(output)-1] = '\0';
					//OLM_T(LMT_User06, ("day:%d, amount:%lu, '%s'\n", day.value, amount.value, output));
				//}

				writer->emit( 0 , &day, &amount);
			}
		}


	};


} // end of namespace samson
} // end of namespace time_test

#endif
