
/**
 File autogenerated with samsonModuleParser. Please, edit to complete this operation
 */

#ifndef _H_SAMSON_mob_reduce_count_different_days
#define _H_SAMSON_mob_reduce_count_different_days


#include <samson/module/samson.h>


namespace samson{
namespace mob{


class reduce_count_different_days : public samson::Reduce
{

	samson::system::Void void_data;

public:


#ifdef INFO_COMMENT //Just to include a comment without conflicting anything
	// If interface changes and you do not recreate this file, consider updating this information (and of course, the module file)

	input: mob.PhoneLoc system.Void
	output: system.UInt64 mob.LocCounter

	helpLine: Count different days with calls.
	extendedHelp: 		Count different days with calls.

#endif // de INFO_COMMENT

	void init(samson::KVWriter *writer )
	{
	}

	/**
	 * Count different days with calls.
	 */
	void run(  samson::KVSetStruct* inputs , samson::KVWriter *writer )
	{
		PhoneLoc phoneLoc;
		samson::system::UInt64 phone;
		LocCounter locCounter;

		if (inputs[0].num_kvs == 0)
		{
			return;
		}

		phoneLoc.parse( inputs[0].kvs[0]->key );

		//  fill structures
		phone.value = phoneLoc.phone.value;
		locCounter.loc = phoneLoc.loc;
		locCounter.count.value = inputs[0].num_kvs;

		// emit
		writer->emit(0, &phone, &locCounter );
	}

	void finish(samson::KVWriter *writer )
	{
	}



};


} // end of namespace samson
} // end of namespace mob

#endif
