
/**
 File autogenerated with samsonModuleParser. Please, edit to complete this operation
 */

#ifndef _H_SAMSON_mob_reduce_compute_reference_location
#define _H_SAMSON_mob_reduce_compute_reference_location


#include <samson/module/samson.h>


namespace samson{
namespace mob{



class reduce_compute_reference_location : public samson::Reduce
{

public:


#ifdef INFO_COMMENT //Just to include a comment without conflicting anything
	// If interface changes and you do not recreate this file, consider updating this information (and of course, the module file)

	input: system.UInt64 mob.LocCounter
	output: system.UInt64 mob.LocCounter

	helpLine: Get the location with the highest number of calls or days with calls.
	extendedHelp: 		Get the location with the highest number of calls or days with calls.

#endif // de INFO_COMMENT

	void init(samson::KVWriter *writer )
	{
	}

	/**
	 * Compute the location (i.e. cell, BTS, LAC or state)
	 * where the highest number of items (calls or
	 * days with calls) have taken place.
	 */
	void run(  samson::KVSetStruct* inputs , samson::KVWriter *writer )
	{
		LocCounter refLocCounter;
		LocCounter locCounter;
		samson::system::UInt64 phone;

		refLocCounter.loc = 0;
		refLocCounter.count = 0;

		for( int i=0; i<inputs[0].num_kvs; i++ )
		{
			locCounter.parse( inputs[0].kvs[i]->value );
			if( locCounter.count >= refLocCounter.count )
			{
				refLocCounter.loc = locCounter.loc;
				refLocCounter.count = locCounter.count;
			}
		}

		// parse phone number
		phone.parse( inputs[0].kvs[0]->key );

		// emit the location with the highest number of calls
		writer->emit(0, &phone, &refLocCounter );
	}

	void finish(samson::KVWriter *writer )
	{
	}



};


} // end of namespace samson
} // end of namespace mob

#endif
