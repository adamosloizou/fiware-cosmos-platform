Module plot
{
	title	"Plot module for displaying data"
	author	"Andreu Urruela"
	version "0.1"
}

data Level
{
	system.Float level;
	system.Float published_level;   # Value last published
}

data LevelUpdate
{
	system.UInt8 command;  # Add / Remove / Set
	system.Float level;	
}

data LevelNotification
{
	system.Float level;
}

# ------------------------------------------------------------
# Reduce to update a Level
# ------------------------------------------------------------

reduce update_levels
{
	in system.String plot.LevelUpdate
	in system.String plot.Level

	out system.String plot.LevelNotification
	out system.String plot.Level

	helpLine "Update Level with LevelUpdate items. Push level at the output if significant change observed"
}

# ------------------------------------------------------------
# Extract data
# ------------------------------------------------------------


parserOut publish_level_notifications
{
	in system.String plot.LevelNotification
	helpLine "Get a txt version of content"
}

# ------------------------------------------------------------
# Testing
# ------------------------------------------------------------

generator generator
{
	out system.String plot.LevelUpdate
	helpLine "Simple generator for testing"
}

script init_stream_operations
{
	code
	{
		# Queues
		alias [q1] 01.updates;
		alias [q2] 02.levels;
		alias [q3] 03.levels_updates;
		alias [q4] 04.txt_notifications; 
		
		# Operations
		alias [o1] 01.update;
		alias [o2] 02.publish;

		# Remove queues and operations
		rm_queue [q1] [q2] [q3] [q4] -f;
		rm_stream_operation [o1] [o2] -f;

		set_queue_property [q4] max_size 1000;

		# Definitions
		aso [o1]  plot.update_levels                   [q1] [q2] [q3] [q2];
		aso [o2]  plot.publish_level_notifications	   [q3]      [q4];
	}
}

