
/**
 File autogenerated with samsonModuleParser. Please, edit to complete this operation
*/

#ifndef _H_SAMSON_plot_update_data
#define _H_SAMSON_plot_update_data


#include <samson/module/samson.h>
#include <samson/modules/plot/Level.h>
#include <samson/modules/plot/LevelUpdate.h>
#include <samson/modules/system/String.h>


namespace samson{
namespace plot{


	class update_levels : public samson::Reduce
	{

	   samson::system::String name;
	   samson::plot::Level level;

	   samson::plot::LevelUpdate level_update;
	   samson::plot::LevelNotification level_notification;

	public:


#ifdef INFO_COMMENT //Just to include a comment without conflicting anything
// If interface changes and you do not recreate this file, consider updating this information (and of course, the module file)

input: system.String plot.LevelUpdate  
input: system.String plot.Level  
output: system.String plot.LevelNotification
output: system.String plot.Level

helpLine: Update Level with LevelUpdate items
#endif // de INFO_COMMENT

		void init( samson::KVWriter *writer )
		{
		}

		void run( samson::KVSetStruct* inputs , samson::KVWriter *writer )
		{

		   if( inputs[1].num_kvs == 0 )
		   {
			  name.parse( inputs[0].kvs[0]->key ); // Take the name from the first sample
			  level.init();
		   }
		   else
		   {
			  name.parse( inputs[1].kvs[0]->key );
			  level.parse( inputs[1].kvs[0]->value );
		   }


		   for( size_t i = 0 ; i < inputs[0].num_kvs ; i++ )
		   {
			  // Update sample
			  level_update.parse( inputs[0].kvs[i]->value );
			  level.update( &level_update );
		   }

		   // Emit change if necessary
		   if( level.changed_significantly() )
		   {
			  level.set_published();
			  level_notification.setFrom( &level );
			  writer->emit( 0 , &name , &level_notification );
		   }


		   writer->emit( 1 , &name , &level );

		}

		void finish( samson::KVWriter *writer )
		{
		}



	};


} // end of namespace plot
} // end of namespace samson

#endif
