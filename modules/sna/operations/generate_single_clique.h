
/**
 File autogenerated with samsonModuleParser. Please, edit to complete this operation
*/

#ifndef _H_SAMSON_sna_generate_single_clique
#define _H_SAMSON_sna_generate_single_clique


#include <samson/Operation.h>
#include "sna_environment_parameters.h"


namespace ss{
namespace sna{


	class generate_single_clique : public ss::Generator
	{

	public:
		std::vector<uint> nodes ;

		void init()
		{
			std::string nodes_param = environment->get(SNA_PARAMETER_GENERATE_SINGLE_CLIQUE_NODES, SNA_PARAMETER_GENERATE_SINGLE_CLIQUE_NODES_DEFAULT);

			char *p_nodes = (char *)nodes_param.c_str();
			char *p_sep;

			while (p_nodes && (*p_nodes != '\0'))
			{
				if ((p_sep = strchr(p_nodes, ';')) != NULL)
				{
					*p_sep = '\0';
					nodes.push_back( atoll(p_nodes));
					p_nodes = p_sep+1;
				}
				else
				{
					nodes.push_back( atoll(p_nodes));
				}
			}
		}


		void run( ss::KVWriter *writer )
		{
			Clique clique;
			for (int i = 0 ; i < (int) nodes.size() ; i++)
				clique.nodesAdd()->value = nodes[i];

			ss::system::Void void_data;

			writer->emit(0, &clique , &void_data );
		}


	};


} // end of namespace ss
} // end of namespace sna

#endif
