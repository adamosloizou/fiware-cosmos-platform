
/**
 File autogenerated with samsonModuleParser. Please, edit to complete this operation
*/

#ifndef _H_SAMSON_sna_parse_out_dyads
#define _H_SAMSON_sna_parse_out_dyads


#include <samson/module/samson.h>
#include "sna_environment_parameters.h"



namespace samson{
namespace sna{


	class parse_out_dyads : public samson::ParserOut
	{
		char* sep ;

#ifdef MAX_STR_LEN
#undef MAX_STR_LEN
#endif

#define MAX_STR_LEN 1024
			char output[MAX_STR_LEN];

	public:

		void init(){
		  const char * def = "|";

		  sep = strdup(environment->get("sna.separator", def).c_str());
		}

		void run(KVSetStruct* inputs , TXTWriter *writer )
		{
			  samson::system::UInt uint_key;
			  Link link_value;

			  int total = 0;

			  for (int i  =0 ;  i < inputs[0].num_kvs ; ++i) {
			    uint_key.parse( inputs[0].kvs[i]->key );
			    link_value.parse( inputs[0].kvs[i]->value );

			    snprintf(output, MAX_STR_LEN, "%lu%s%lu\n", uint_key.value, sep, link_value.id.value);

			    writer->emit(output);
			  }
			  return;
		}

#ifdef RUNFINISH
		void runFinish(TXTWriter *writer)
		{

		  int total = 0;
		  total += fprintf(file, "phone1%s", sep);
		  total += fprintf(file, "phone2\n");

		  free(sep);

		  return ;
		}

#endif
	};


} // end of namespace samson
} // end of namespace sna

#endif
