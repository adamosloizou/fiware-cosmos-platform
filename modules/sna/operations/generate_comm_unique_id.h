
/**
 File autogenerated with samsonModuleParser. Please, edit to complete this operation
*/

#ifndef _H_SAMSON_sna_generate_comm_unique_id
#define _H_SAMSON_sna_generate_comm_unique_id


#include <samson/module/samson.h>


namespace samson{
namespace sna{


	class generate_comm_unique_id : public samson::Map
	{

	public:


		void run(  samson::KVSetStruct* inputs , samson::KVWriter *writer )
		{
			  samson::system::UInt id;
			  Clique clique;
			  Clique orphan;
			  Community output;

			  if(inputs[0].num_kvs == 0) {
			      return ;        // No inputs
			  }

			  clique.parse( inputs[0].kvs[0]->key );
			  int hash = clique.hash(100);
			  size_t counter = 0 ;

			  for (size_t i = 0 ; i < inputs[0].num_kvs ; i++) {
			    clique.parse(inputs[0].kvs[i]->key );
			    orphan.parse( inputs[0].kvs[i]->value );

			    id.value = (100*counter++)+hash;
			    output.id_comm = id.value;
			    output.nodes.copyFrom(&clique);
			    output.orphan.copyFrom(&orphan);
			    writer->emit(0, &clique, &output );
			  }
		}


	};


} // end of namespace samson
} // end of namespace sna

#endif
