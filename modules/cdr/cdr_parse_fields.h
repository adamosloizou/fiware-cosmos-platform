
/**
 File autogenerated with samsonModuleParser. Please, edit to complete this operation
*/

#ifndef _H_SAMSON_cdr_parse_fields
#define _H_SAMSON_cdr_parse_fields

#include <stdlib.h>
#include <math.h>



#define CONF_SEP                    '|'



		///Function to get next field of a line
		///from a source data file.
		///
		///@param line Pointer to the line being parsed.
		///@param pos Pointer to the las position of the former field.
		///@param pos_field Pointer to the first position of the next field.
		///
		void cdrGetNextField(char *line, unsigned int *pos, unsigned int *pos_field);


		///Function to translate a string cell id
		///into an integer cell id.
		///
		///@param strCellId Pointer to the string cell id.
		///@param cellId Pointer to the integer cell id.
		void cdrStrCellToInt( char *strCellId, unsigned int *cellId );

		inline void GST_get_cdrs_number( char *line, size_t *num,  int pos_field )
		{
			*num = atoll( &line[pos_field] );
		}


		///Function to translate a char
		///into a integer.
		///
		///@param line character to traslate.
		inline int GST_char_to_int(char character)
		{
			return (character -48);
		}


		///Function to translate a string date
		///into a date structure.
		///
		///@param strDate Pointer to the string date.
		///@param date Pointer to the tm structure (only date information will be filled.
		///@param old Flag to decide the date format
		void cdrStrDateToStructure( char *strDate, struct tm *date , bool old);

		///Function to translate a string time
		///into a time structure.
		///
		///@param strTime Pointer to the string time.
		///@param time Pointer to the tm structure.
		void cdrStrTimeToStructure( char *strTime, struct tm *time );

		///Function to translate a string date time
		///into a date structure.
		///
		///@param strDate Pointer to the string date.
		///@param time Pointer to the tm structure 
		///@param old Flag to decide the date format
		void cdrStrDateTimeToStructure( char *strTime, struct tm *time , bool old);

		inline unsigned int GST_calculate_mask(int digit)
		{
			return (int(pow(10,(digit -1))) - 1);
		}


		///Function to translate a string phone number
		///into an integer phone number.
		///
		///@param strPhone Pointer to the string phone number.
		///@param phone Pointer to the integer phone number.
		///@param max_client max_length of the client phone number
		void cdrPhoneToNumber (char *line, size_t *phone, int max_client );

		///(TEMM specific)
		///Function to translate a string mobility scope
		///into an integer mobility scope.
		///
		///@param strMobScope Pointer to the string mobility scope.
		///@param mobScope Pointer to the integer mobility scope.
		void cdrStrScopeToInt_MX( char *strMobScope, size_t *mobScope );

#endif // de _H_SAMSON_cdr_parse_fields
