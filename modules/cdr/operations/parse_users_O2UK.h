/**
 File autogenerated with samsonModuleParser. Please, edit to complete this operation
 */

#ifndef _H_SAMSON_cdr_parse_users_O2UK
#define _H_SAMSON_cdr_parse_users_O2UK

#include <samson/Operation.h>

namespace ss
{
namespace cdr
{

class parse_users_O2UK: public ss::Parser
{
	bool getUserFromLine_O2UK(char *line, ss::system::UInt* node,
			ss::cdr::User *user)
	{
		*node = (size_t) atoll(line);
		user->id = (size_t) atoll(line);
	}

public:
	ss::system::UInt node; // Main telephone number
	ss::cdr::User user; // All information related with this


	void run(char *data, size_t length, ss::KVWriter *writer)
	{
		size_t line_begin = 0;
		size_t offset = 0;

		while (offset < length)
		{
			if (data[offset] == '\n' || data[offset] == '\0')
			{
				//LM_M(("Process line"));
				data[offset] = '\0';

				//std::cout << ".";

				// Process line
				if (getUserFromLine_O2UK(data + line_begin, &node, &user))
				{
					writer->emit(0, &node, &user);
				}
				else
				{
#ifdef DEBUG_FILES
					std::string filename = "/tmp/parser_users_O2UK.log";
					std::ofstream fs(filename.c_str(), std::ios::app);
					fs << "ERROR at:" << data + line_begin << std::endl;
					fs.close();
#endif /* de DEBUG_FILES */
				}
				line_begin = offset + 1;
			}
			offset++;
		}

		if (line_begin < (length - 1))
		{
			data[length - 1] = '\0';
			if (getUserFromLine_O2UK(data + line_begin, &node, &user))
			{
				//LM_M(("parse_users_O2UK: Emit node->value:%d", node.value));
				//std::string filename = "/tmp/parser_users_O2UK.log";
				//std::ofstream fs(filename.c_str(), std::ios::app);
				//fs << "Emit node->value: " << node.value << std::endl;
				//fs.close();
				writer->emit(0, &node, &user);
			}
			else
			{
#ifdef DEBUG_FILES
				std::string filename = "/tmp/parser_users_O2UK.log";
				std::ofstream fs(filename.c_str(), std::ios::app);
				fs << "ERROR at:" << data + line_begin << std::endl;
				fs.close();
#endif /* de DEBUG_FILES */
				;
			}
		}
	}

};

} // end of namespace ss
} // end of namespace cdr

#endif
