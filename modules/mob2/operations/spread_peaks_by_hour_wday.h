
/**
 File autogenerated with samsonModuleParser. Please, edit to complete this operation
*/

#ifndef _H_SAMSON_mob2_spread_peaks_by_hour_wday
#define _H_SAMSON_mob2_spread_peaks_by_hour_wday


#include <samson/module/samson.h>
#include <samson/modules/mob2/ClusterVector.h>
#include <samson/modules/mob2/ItinRange.h>
#include <samson/modules/mob2/TwoInt.h>
#include <samson/modules/system/Void.h>


namespace samson{
namespace mob2{


	class spread_peaks_by_hour_wday : public samson::Map
	{
		// Inputs
		ItinRange itrang;
		ClusterVector peaks;
		// Outputs
		TwoInt wday_count;	//num1:week day		num2: perct of moves

		// BORRAR
		samson::system::Void mr_void;
		ItinRange npeakday;
		//
	public:


#ifdef INFO_COMMENT //Just to include a comment without conflicting anything
// If interface changes and you do not recreate this file, consider updating this information (and of course, the module file)

input: mob2.ItinRange mob2.ClusterVector  
output: mob2.ItinRange mob2.TwoInt
output: mob2.ItinRange system.Void

extendedHelp: 		Spread peaks vector by week day and range

#endif // de INFO_COMMENT

		void init(samson::KVWriter *writer )
		{
		}

		void run(  samson::KVSetStruct* inputs , samson::KVWriter *writer )
		{
			for(uint64_t i=0; i<inputs[0].num_kvs; i++)
			{
				itrang.parse(inputs[0].kvs[i]->key);
				peaks.parse(inputs[0].kvs[i]->value);

				for(int j=0; j<peaks.coms_length; j++)
				{
					if(peaks.coms[j].value != 0)
					{
						itrang.group.value = ((j/24) + 1) % 7;
						itrang.range.value = j%24;
						wday_count.num1.value = itrang.group.value;
						wday_count.num2.value = peaks.coms[j].value * 1000;
						npeakday.copyFrom(&itrang);		// BORRAR
						itrang.group.value = 0;
						writer->emit(0, &itrang,&wday_count);
						//BORRAR
						npeakday.range.value = 0;
						writer->emit(1, &npeakday,&mr_void);
						//
					}
				}
			}
		}

		void finish(samson::KVWriter *writer )
		{
		}



	};


} // end of namespace mob2
} // end of namespace samson

#endif
