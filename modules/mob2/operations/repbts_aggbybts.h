
/**
 File autogenerated with samsonModuleParser. Please, edit to complete this operation
*/

#ifndef _H_SAMSON_mob2_repbts_aggbybts
#define _H_SAMSON_mob2_repbts_aggbybts


#include <samson/module/samson.h>
#include <samson/modules/mob2/Node_Bts_Day.h>
#include <samson/modules/system/UInt.h>



namespace samson{
namespace mob2{


	class repbts_aggbybts : public samson::Reduce
	{
        // Inputs
        Node_Bts_Day inkey;
        samson::system::UInt ncalls;
        // Outputs
        samson::system::UInt node;
        Node_Bts_Day output;

	public:


#ifdef INFO_COMMENT //Just to include a comment without conflicting anything
// If interface changes and you do not recreate this file, consider updating this information (and of course, the module file)

input: mob2.Node_Bts_Day system.UInt  
output: system.UInt mob2.Node_Bts_Day

extendedHelp: 		Add the number comms of a client in a bts

#endif // de INFO_COMMENT

		void init(samson::KVWriter *writer )
		{
		}

////////
// Sum of num comms by bts of a client
////////

		void run(  samson::KVSetStruct* inputs , samson::KVWriter *writer )
		{
        int num_calls = 0;

    inkey.parse(inputs[0].kvs[0]->key);
        node.value = inkey.node.value;
        for(uint64_t i=0; i<inputs[0].num_kvs; i++)
        {
                ncalls.parse(inputs[0].kvs[i]->value);
                num_calls += ncalls.value;
                
        }
        output.node.value = inkey.node.value;
        output.bts.value = inkey.bts.value;
        output.workday.value = inkey.workday.value;
        output.count.value = num_calls;
        writer->emit(0, &node,&output);

		}

		void finish(samson::KVWriter *writer )
		{
		}



	};


} // end of namespace mob2
} // end of namespace samson

#endif
