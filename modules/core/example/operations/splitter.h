
/**
 File autogenerated with samsonModuleParser. Please, edit to complete this operation
*/

#ifndef _H_SAMSON_example_splitter
#define _H_SAMSON_example_splitter


#include <samson/module/samson.h>


namespace samson{
namespace example{


	class splitter : public samson::Splitter
	{

	public:


//  INFO_MODULE
// If interface changes and you do not recreate this file, you will have to update this information (and of course, the module file)
// Please, do not remove this comments, as it will be used to check consistency on module declaration
//
//  
// helpLine: Example of splitter that change first two characters of every line by XX
//  END_INFO_MODULE

		int split( char * inData, size_t inLength , bool finished , char ** nextData , SplitterEmitter* emitter )
		{
		   // Return all completed lines ( not partial lines ) changing the first two chars by XX

		   // Search for the last return

		   size_t begin = 0;
		   for ( size_t i = 0  ; i < inLength; i++ )
		   {
			  if( inData[i] == '\n' )
			  {
				 // A new line is generated

				 // Change first two chars ( if any )
				 for ( size_t j = 0 ; j < 2 ; j++ )
					if( begin + j < i )
					   inData[begin+j] = 'X';
				 
				 emitter->emit( &inData[begin] , i - begin + 1 );
				 begin = i+1;
			  }
			  
		   }
		   
		   // Point to the non completed lines
		   *nextData = &inData[begin]; // Keep all input buffer
		   return 0;

		}



	};


} // end of namespace example
} // end of namespace samson

#endif
