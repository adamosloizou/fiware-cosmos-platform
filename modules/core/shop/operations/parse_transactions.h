
/**
 File autogenerated with samsonModuleParser. Please, edit to complete this operation
*/

#ifndef _H_SAMSON_shop_parse_transactions
#define _H_SAMSON_shop_parse_transactions


#include <samson/module/samson.h>
#include <samson/modules/shop/Transaction.h>
#include <samson/modules/system/UInt.h>
#include <samson/modules/system/SimpleParser.h>

#include <stdint.h>

namespace samson{
namespace shop{


	class parse_transactions : public samson::system::SimpleParser
	{

	    uint64_t local_count;
	public:


//  INFO_MODULE
// If interface changes and you do not recreate this file, you will have to update this information (and of course, the module file)
// Please, do not remove this comments, as it will be used to check consistency on module declaration
//
//  output: system.UInt shop.Transaction
//  
// helpLine: Parser to read generated operations data
//  END_INFO_MODULE

		void init( samson::KVWriter *writer )
		{
		    local_count = 0;
		}

		void parseLine( char * line, samson::KVWriter *writer)
		{
		    std::vector<char*> fields;
		    char sep = '|';
		    char *endptr;

		    split_in_words(line, fields, sep);

            samson::system::UInt id;
            samson::shop::Transaction transaction;

            id.value = local_count;

            transaction.user = strtoul(fields[0], &endptr, 10);
            transaction.product = strtoul(fields[1], &endptr, 10);
            transaction.operationType = strtoul(fields[2], &endptr, 10);

            writer->emit(0, &id, &transaction);

		}

		void finish( samson::KVWriter *writer )
		{
		}



	};


} // end of namespace shop
} // end of namespace samson

#endif
