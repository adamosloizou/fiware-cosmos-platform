
/**
 File autogenerated with samsonModuleParser. Please, edit to complete this operation
*/

#ifndef _H_SAMSON_SimpleParserOut
#define _H_SAMSON_SimpleParserOut


#include <samson/module/samson.h>
#include <samson/modules/system/UInt.h> 

namespace samson{
namespace system{

        template <class Key,class Value>
	class SimpleParserOut : public samson::ParserOut
	{

		std::ostringstream output;
		Key key;
		Value value;

		std::string separator;
		
	public:

		void init(TXTWriter *writer)
		{
			separator = environment->get( "system.separator" , " " );
		}
		

		void run(KVSetStruct* inputs , TXTWriter *writer )
		{
			for (size_t i = 0 ; i < inputs[0].num_kvs ; i++)
			{
				key.parse( inputs[0].kvs[i]->key );
				value.parse( inputs[0].kvs[i]->value );
				
				output.str("");	// Clear content
				
				//output << key.str() << separator << value.str() << std::endl;
				output << key.str() << " " << value.str() << std::endl;
				
				writer->emit(output.str());
			}			
		}

	};


} // end of namespace system
} // end of namespace samson

#endif
