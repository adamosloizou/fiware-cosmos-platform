
/**
 File autogenerated with samsonModuleParser. Please, edit to complete this operation
*/

#ifndef _H_SAMSON_system_lines
#define _H_SAMSON_system_lines


#include <samson/module/samson.h>


namespace samson{
namespace system{


	class lines : public samson::Splitter
	{

	public:


//  INFO_MODULE
// If interface changes and you do not recreate this file, you will have to update this information (and of course, the module file)
// Please, do not remove this comments, as it will be used to check consistency on module declaration
//
//  
// helpLine: Parse input keeping lines toguether
//  END_INFO_MODULE

	   int split( char * inData, size_t inLength, char ** outData, size_t *outLength, char ** nextData , bool finish )
		{

		   if( finish )
		   {
			  if(outData)
				 *outData = inData;
			  if(outLength)
				 *outLength = inLength;
			  if(nextData)
				 *nextData = NULL;

			  return 0;
		   }

		   // Assuming, it is never the end of the buffer
		   for ( size_t i = inLength-1 ; i > 0 ; i-- )
		   {
			  if( inData[i] == '\n' )
			  {
				 if(outData)
					*outData = inData;
				 if(outLength)
					*outLength = (i+1);
				 if(nextData)
					*nextData = &inData[i+1];				 				 
			  }

			return 0;
		   }

		   // Not possible to find a return in the entire buffer, just return error
		   return 1;

		}



	};


} // end of namespace system
} // end of namespace samson

#endif
