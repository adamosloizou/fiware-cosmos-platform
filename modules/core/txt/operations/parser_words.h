
/**
 File autogenerated with samsonModuleParser. Please, edit to complete this operation
*/

#ifndef _H_SAMSON_txt_parser_words
#define _H_SAMSON_txt_parser_words


#include "au/charset.h"

#include <samson/module/samson.h>
#include <samson/module/samson.h>
#include <samson/modules/system/SimpleParser.h>
#include <samson/modules/system/String.h>
#include <samson/modules/system/UInt.h>
#include <samson/modules/system/Void.h>
#include <iostream>

namespace samson{
namespace txt{


	class parser_words : public samson::system::SimpleParser
	{
		samson::system::String key;
		samson::system::UInt value;

	public:
		
		parser_words()
		{
            // Output value is always 1
			value.value = 1;			
		}
		
		bool isSeparator( char c )
		{
           // If it not a letter is a separator
		   return !au::iso_8859_is_letter( c );
		}


		void parseLine( char *data , samson::KVWriter *writer )
		{
			
		   //OLM_M(("Parsing line '%s'" , data ));

			int pos_begin=0;
			int pos_end;

			while( true )
			{			   

			   // Find where the word starts...
			   while(  true )
			   {
				  if( data[pos_begin] == '\0' )
					 return;// Found end of line, so more new words

				  // Find where the word starts...
				  if( isSeparator( data[pos_begin] ) )
					 pos_begin++;
				  else
					 break;
			   }

			   pos_end = pos_begin+1;

               // Find where the word ends...
               while(  true )
               {
                  if( data[pos_end] == '\0' )
					 break;

                  // Find where the word starts...
                  if( !isSeparator( data[pos_end] ) )
                     pos_end++;
                  else
                     break;
               }


				if( data[pos_end] == '\0' )
				{
				   // the last word
					key.value = &data[pos_begin];
					if( key.value.length() > 0 )
					{
						writer->emit( 0 , &key, &value);
						//OLM_M(("Output last word '%s' [%d %d]" , key.value.c_str() , pos_begin , pos_end ));
					}
					return;
				}
				else
				{
				   data[pos_end]='\0';// Artifical end of string
					key.value = &data[pos_begin];
					if( key.value.length() > 0 )
					{
						writer->emit( 0 , &key, &value);
						//OLM_M(("Output last word '%s' [%d %d]" , key.value.c_str() , pos_begin , pos_end ));
					}

					pos_begin = pos_end+1;
				}

			}
		}

	};


} // end of namespace samson
} // end of namespace system

#endif
