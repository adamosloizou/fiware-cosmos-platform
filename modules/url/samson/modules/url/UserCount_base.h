
/**
 File autogenerated with samsonModuleParser, please do not edit
*/

#ifndef _H_SAMSON_url_UserCount_BASE
#define _H_SAMSON_url_UserCount_BASE


#include <samson/modules/system/UInt.h>


namespace samson{
namespace url{


	class UserCount_base : public samson::DataInstance{

	public:
	::samson::system::UInt user;
	::samson::system::UInt count;

	UserCount_base() : samson::DataInstance(){
	}

	~UserCount_base() {
	}

	int parse(char *data){
		int offset=0;
		{ //Parsing user
			offset += user.parse(data+offset);
		}

		{ //Parsing count
			offset += count.parse(data+offset);
		}

		return offset;
	}

	int serialize(char *data){
		int offset=0;
		{ //Serializing user
			offset += user.serialize(data+offset);
		}

		{ //Serializing count
			offset += count.serialize(data+offset);
		}

		return offset;
	}

	static inline int size(char *data){
		int offset=0;
		{ //Sizing user
			offset += ::samson::system::UInt::size(data+offset);
		}

		{ //Sizing count
			offset += ::samson::system::UInt::size(data+offset);
		}

		return offset;
	}

	int hash(int max_num_partitions){
		{ //Partitioning user
			return user.hash(max_num_partitions);
		}

	}

	inline static int compare(char * data1 , char *data2 , size_t *offset1 , size_t *offset2 ){
		{ // comparing user
			int tmp = ::samson::system::UInt::compare(data1,data2,offset1 , offset2);
			if( tmp != 0) return tmp;
		}   //  user compared 
		{ // comparing count
			int tmp = ::samson::system::UInt::compare(data1,data2,offset1 , offset2);
			if( tmp != 0) return tmp;
		}   //  count compared 
		return 0; //If everything is equal
	}

	inline static int compare( char* data1 , char* data2 )
	{
		size_t offset_1=0;
		size_t offset_2=0;
		return compare( data1 , data2 , &offset_1 , &offset_2 );
	}




	void copyFrom( UserCount_base *other ){
		{ //Copying user
			user.copyFrom(&other->user);
		}

		{ //Copying count
			count.copyFrom(&other->count);
		}

	};

	std::string str(){
		std::ostringstream o;
				{ //Texting user
			o << user.str();
		}

		o<<" ";
				{ //Texting count
			o << count.str();
		}

		o<<" ";
		return o.str();
	}

	}; //class UserCount_base

} // end of namespace samson
} // end of namespace url

#endif
