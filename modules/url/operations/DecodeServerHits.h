
/**
 File autogenerated with samsonModuleParser. Please, edit to complete this operation
*/

#ifndef _H_SAMSON_url_DecodeServerHits
#define _H_SAMSON_url_DecodeServerHits


#include <samson/samson.h>
#include <samson/Log.h>

namespace ss{
namespace url{


	class DecodeServerHits : public ss::Reduce
	{
		ss::system::UInt serverId;
		ss::system::String serverStr;
		PathCountVector paths;

	public:


		void run(  ss::KVSetStruct* inputs , ss::KVWriter *writer )
		{

			if (inputs[1].num_kvs == 0)
			{
				// We don't have statistics for that serverId;
				return;
			}



			serverId.parse(inputs[0].kvs[0]->key);

			if ((inputs[0].num_kvs != 1) || (inputs[1].num_kvs != 1))
			{
				OLM_E(("We should have one and only one occurrence of server(%d) in both lists. inputs[0].num_kvs: %d; inputs[1].num_kvs: %d", serverId.value, inputs[0].num_kvs, inputs[1].num_kvs));
				return;
			}

			serverStr.parse(inputs[0].kvs[0]->value);
			paths.parse(inputs[1].kvs[0]->value);
			writer->emit(0, &serverStr, &paths);
		}


	};


} // end of namespace ss
} // end of namespace url

#endif
