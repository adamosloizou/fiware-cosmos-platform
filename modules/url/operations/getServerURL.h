
/**
 File autogenerated with samsonModuleParser. Please, edit to complete this operation
*/

#ifndef _H_SAMSON_url_getServerURL
#define _H_SAMSON_url_getServerURL


#include <samson/samson.h>
#include <samson/Log.h>

/*

map getServerURL
{
        in url.URL system.Void
        out system.String url.UserPath           # Server(string) User(id)-Path(string)

        helpLine "Extract the server-userPath connection form a set of input URLs"
}

*/

namespace ss{
namespace url{


	class getServerURL : public ss::Map
	{

	public:


		void run(  ss::KVSetStruct* inputs , ss::KVWriter *writer )
		{
			  URL url;
			  UserPath userPath;
			  //OLM_T( LMT_User06 , (" url. getServerURL with %d samples", inputs->num_kvs));
			  for ( size_t i = 0 ; i < inputs->num_kvs ; i++)
			  {
			    if( !(i%1000) )
			      operationController->reportProgress( (double) i / (double) inputs->num_kvs );

			    //OLM_T( LMT_User06 , (" url. getServerURL parsing kv: %d", i));
				url.parse( inputs->kvs[i]->key );

				userPath.user = url.user;
				userPath.path = url.path;

				writer->emit( 0 , &url.server , &userPath );
			  }

		}


	};


} // end of namespace ss
} // end of namespace url

#endif
