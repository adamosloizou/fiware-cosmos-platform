
/**
 File autogenerated with samsonModuleParser. Please, edit to complete this operation
*/

#ifndef _H_SAMSON_url_DecodeServerCategories
#define _H_SAMSON_url_DecodeServerCategories


#include <samson/samson.h>
#include <samson/Log.h>

/*********************************************************
reduce DecodeServerCategories
{
	in system.UInt system.String	      # Server(id) - Server(string) to decode the server information
	in system.UInt url.CategoryVector     # Server(id) - CategoryVector (averaged through servers)
	out system.String url.CategoryVector  # Server(string) - CategoryVector

	helpLine "Decode the list of servers to string, with category distribution"
}
**********************************************************/

namespace ss{
namespace url{


	class DecodeServerCategories : public ss::Reduce
	{

	public:
		ss::system::String serverStr;
		CategoryVector categories;


		void run(  ss::KVSetStruct* inputs , ss::KVWriter *writer )
		{
			if (inputs[1].num_kvs == 0)
			{
				return;
			}

			if (inputs[0].num_kvs != 1)
			{
				ss::system::UInt serverId;
				serverId.parse(inputs[1].kvs[0]->key);
				OLM_E(("We should have one and only one occurrence of servers in decoding server list. inputs[0].num_kvs: %d", inputs[0].num_kvs));
			}

			serverStr.parse(inputs[0].kvs[0]->value);
			categories.parse(inputs[1].kvs[0]->value);

			writer->emit(0, &serverStr, &categories);
		}


	};


} // end of namespace ss
} // end of namespace url

#endif
