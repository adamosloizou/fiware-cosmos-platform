
/**
 File autogenerated with samsonModuleParser. Please, edit to complete this operation
 */

#ifndef _H_SAMSON_mob2_vector_oneid_out
#define _H_SAMSON_mob2_vector_oneid_out


#include <samson/module/samson.h>
#include <samson/modules/mob2/Cluster.h>
#include <samson/modules/system/UInt.h>



namespace samson{
namespace mob2{


class vector_oneid_out : public samson::ParserOut
{
	//Inputs
	samson::system::UInt id;
	Cluster cluster;
#ifdef MAX_STR_LEN
#undef MAX_STR_LEN
#endif
#define MAX_STR_LEN 1024
	char output[MAX_STR_LEN];

public:


#ifdef INFO_COMMENT //Just to include a comment without conflicting anything
	// If interface changes and you do not recreate this file, consider updating this information (and of course, the module file)

	input: system.UInt mob2.Cluster

	extendedHelp: 		Parse out of a vector

#endif // de INFO_COMMENT

	void init(TXTWriter *writer )
	{
	}

	void run(KVSetStruct* inputs , TXTWriter *writer )
	{

		for(uint64_t i=0; i<inputs[0].num_kvs; i++)
		{
			size_t total = 0;
			id.parse(inputs[0].kvs[i]->key);
			cluster.parse(inputs[0].kvs[i]->value);
			total += snprintf( output+total, MAX_STR_LEN-total,"%lu|%d|%d|%d|%f",id.value,cluster.label.value,cluster.labelgroup.value,cluster.confident.value,cluster.distance.value);
			for(int j=0; j<cluster.coords.coms_length; j++)
			{
				total += snprintf( output+total, MAX_STR_LEN-total,"|%f",cluster.coords.coms[j].value);
			}
			total += snprintf( output+total, MAX_STR_LEN-total,"\n");
			writer->emit(output);

		}

	}

	void finish(TXTWriter *writer )
	{
	}



};


} // end of namespace mob2
} // end of namespace samson

#endif
