
/**
 File autogenerated with samsonModuleParser. Please, edit to complete this operation
*/

#ifndef _H_SAMSON_mob2_borrar_get_distHour_itin
#define _H_SAMSON_mob2_borrar_get_distHour_itin


#include <samson/module/samson.h>
#include <samson/modules/mob2/ItinMovement.h>
#include <samson/modules/system/UInt.h>
#include <samson/modules/system/Void.h>
#include <stdint.h>


namespace samson{
namespace mob2{


	class borrar_get_distHour_itin : public samson::Reduce
	{
		// Inputs
		ItinMovement move;
		// Outputs
		samson::system::UInt difHour;
		samson::system::Void mr_void;


	public:


#ifdef INFO_COMMENT //Just to include a comment without conflicting anything
// If interface changes and you do not recreate this file, consider updating this information (and of course, the module file)

input: system.UInt mob2.ItinMovement  
output: system.UInt system.Void

extendedHelp: 		Extract difference in absolute hour between movements

#endif // de INFO_COMMENT

		void init(samson::KVWriter *writer )
		{
		}

		void run(  samson::KVSetStruct* inputs , samson::KVWriter *writer )
		{
			int sHour, tHour;
			for(uint64_t i=0; i<inputs[0].num_kvs; i++)
			{
				move.parse(inputs[0].kvs[i]->value);
				sHour = move.source.time.hour.value;
				tHour = move.target.time.hour.value;
				if(move.source.date.day.value != move.target.date.day.value)
				{
					tHour += 24;
				}
				difHour.value = tHour - sHour;
				writer->emit(0, &difHour,&mr_void);
			}

		}

		void finish(samson::KVWriter *writer )
		{
		}



	};


} // end of namespace mob2
} // end of namespace samson

#endif
