Module OTTstream
{

	title	"OTTstream  module"
	author 	"Gregorio Escalada (jges@tid.es)"
	version "0.1"
	
}

# ---------------------------------------------------------------------------
# datas
# ---------------------------------------------------------------------------

data ServiceHit
{
	 system.TimeUnix timestamp;
     system.UInt serviceId;    
}

data UserHit
{
     system.TimeUnix time;
     system.UInt userId;
}

data ServiceActivity
{
     system.UInt serviceId;
     system.TimeUnix timestamp;
     system.UInt8 inCount;
}

data UserActivityTimeSpan
{
     system.UInt userId;
     system.UInt countHits;
}

data Activity
{
	vector OTTstream.ServiceActivity servActivity;
}

data LastHistory
{
	system.TimeUnix newest;
	system.TimeUnix latest;
	vector OTTstream.ActivityTimeSpan activity;
}


# -------------------------------------------------
# Operations with data
# -------------------------------------------------

simpleParser parse_logs
{
	out system.UInt OTTstream.ServiceHit
	
	helpLine "parse input logs from http or dns, and emit service use with userId as key"
}

reduce red_update_last_user_profile
{
	in system.UInt OTTstream.ServiceHit
	in system.UInt OTTstream.Activity
	out system.String level.ValTimed
	out system.UInt OTTstream.Activity
	
	helpLine "Update the latest user profile" 
}


script init_stream_operations
{
    code
    {
        # ----------------------------------------------------------------
		# Input queues
		# ----------------------------------------------------------------
        
        alias [input_http]           logs_http;
        alias [input_dns]        	 logs_dns;
        alias [input_sms]           logs_sms;
        alias [input_voice]        	 logs_voice;
        
        # ----------------------------------------------------------------
		# Output queues
		# ----------------------------------------------------------------
		alias [commands]			commands;
        
		# ----------------------------------------------------------------
		# Internal queues
		# ----------------------------------------------------------------
        
        alias [hits]              hits;
        alias [state]            state;
        
        # ----------------------------------------------------------------
		# Operations
		# ----------------------------------------------------------------
        
        alias [parse]       		parse;
        alias [update]         update;
 
        # ----------------------------------------------------------------
		# Definitions
		# ----------------------------------------------------------------
        
        add_stream_operation      [parse_http]			OTTstream.parse_logs									[input_http]       [hits];
        set_stream_operation_property   [parse_http]      OTTstream.source          HTTP;
        add_stream_operation      [parse_dns]			OTTstream.parse_logs									[input_dns]   		[hits];
        set_stream_operation_property   [parse_dns]      OTTstream.source          DNS;
        add_stream_operation      [parse_sms]			OTTstream.parse_logs									[input_sms]   		[hits];
        set_stream_operation_property   [parse_sms]      OTTstream.source          SMS;
        add_stream_operation      [parse_voice]			OTTstream.parse_logs									[input_voice]   		[hits];
        set_stream_operation_property   [parse_voice]      OTTstream.source          voice;
        add_stream_operation      [emit_hits]			OTTstream.red_update_last_user_profile	[hits] [state]		[commands] [state];
    }

    helpLine "Init stream operations"
}

script demo
{
    code
    {
        #remove_all_stream;

		# ----------------------------------------------------------------
		# Input queues
		# ----------------------------------------------------------------        
		alias [input_http]      logs_http;
        alias [input_dns]      logs_dns;
        alias [input_sms]      logs_sms;
        alias [input_voice]    logs_voice;
		# ----------------------------------------------------------------
		
		# ----------------------------------------------------------------
		# Output queues
		# ----------------------------------------------------------------
		alias [output]			output;
		
		# Internal queues
        alias [commands]              commands;
		
		# ----------------------------------------------------------------
		# OTTstream profiling stream block
		# ----------------------------------------------------------------
        init_stream 01.OTTstream    OTTstream.init_stream_operations;
        
        # Connect with the level module to keep uptated the number of users active in last timespan, for every service
        
		init_stream 02.level level.init_stream_operations_timed;
 
		add_queue_connection [input_http]		01.OTTstream.logs_http;
		add_queue_connection [input_dns]		01.OTTstream.logs_dns;
		add_queue_connection [input_sms]		01.OTTstream.logs_sms;
		add_queue_connection [input_voice]		01.OTTstream.logs_voice;
		add_queue_connection 01.OTTstream.commands 	02.level.01.input;
		add_queue_connection 02.level.04.levels_updates_txt    output
		
		# ----------------------------------------------------------------

    }

    helpLine "Demo about web profiling"
}


