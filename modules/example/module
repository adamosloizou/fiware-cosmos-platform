Module example
{
	title	"Example module to play with samson"
	author	"Andreu Urruela"
	version "0.6"
}

data MyData
{
	vector system.UInt v;
}

data ExampleData
{
	list system.UInt list;
}


generator generator
{
	out system.UInt system.UInt	
	helpLine "Simple generator that generates example.samples pairs of integers"
}

# Generator to test errors handled by the platform

generator generator_error_operation_crashes
{
	out system.UInt system.UInt	
	helpLine "Generator that fails when executing. To simulate the processs 3rd party operation fails and crash"
}

generator generator_error_timeout
{
	out system.UInt system.UInt	
	helpLine "Generator that fails when executing for a timeout."
}

generator generator_error_user_generated
{
	out system.UInt system.UInt
	helpLine "Generator that fails with a user defined error"
}


generator generator_error_wrong_data_type
{
	out system.UInt system.UInt
	helpLine "Generator that fails because it use a system.Double instead of a system.UInt"
}

# Correct operations

parserOut select
{
	in system.UInt system.UInt	

	helpLine "Export system.UInt system.UInt key-values in a standard format. Use example.separator to custommize separator"
}

map map
{
	in system.UInt system.UInt
	out system.UInt system.UInt
}


reduce reduce
{
	in system.UInt system.UInt
	out system.UInt system.UInt

	helpLine "Reduce example to test platform"
}

reduce reduce2
{
	in system.UInt system.UInt
	in system.UInt system.UInt
	out system.UInt system.UInt
	out system.UInt system.UInt

	helpLine "Reduce with two imputs"
}

script test
{
	helpLine "Full test with all the operations"

	code
	{
		example.generator test.samples -create;
		example.map test.samples test.samples2 -create;
		example.reduce test.samples2 test.samples3 -create;
		example.select test.samples3 test.samples.txt -create;
		example.parser test.samples.txt test.samples4 -create;
	}
	
}


generator generator2
{
	out system.UInt system.UInt
	out system.UInt system.UInt
}

parser parser
{
	out system.UInt system.UInt	
}

script script
{

	help
	{
		"An example of a script that creates two queues and generate some content to the second"
	}

	code
	{
		add pepe system.UInt system.UInt;
		add andreu system.UInt system.UInt;
		example.generator andreu;
	}
}

map error
{
	in system.UInt system.UInt
	out system.UInt system.UInt

	helpLine	"Map to produce an error while running to test fault-issolation" 
}

map map_error
{
	in system.String system.UInt
	out system.String system.UInt

	helpLine	"Map to produce an error while running to test fault-issolation" 
}

generator generator_list
{
	out system.UInt example.ExampleData
	helpLine "Example of how to use list types"
}

map map_list
{
	in  system.UInt example.ExampleData
	out system.UInt example.ExampleData

	helpLine "Example of how to use list types"
}



