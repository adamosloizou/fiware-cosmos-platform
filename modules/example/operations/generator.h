
/**
 File autogenerated with samsonModuleParser. Please, edit to complete this operation
*/

#ifndef _H_SAMSON_example_generator
#define _H_SAMSON_example_generator


#include <samson/Operation.h>
#include <samson/Log.h>
#include <samson/modules/system/UInt.h>
#include <iostream>
#include <sstream>


/* ****************************************************************************
 *
 * TRACES Definitions
 */


namespace ss{
namespace example{

	class generator : public ss::Generator
	{

	public:

		void run( ss::KVWriter *writer )
		{

		  // Recover the number of samples from the environment variables
		  size_t num_samples = environment->getSizeT( "example.samples" ,  10 );

		  // Trace to monitor the operation
		  // tracer->trace_print( 0 , "example.generator init with %d samples" , num_samples );

		  OLM_T( LMT_User01 , (" example.generator init with %d samples", num_samples));


		  OLM_M(("Example of simple message..."));
		  OLM_D(("Example of a debug message..."));		  
		  OLM_E(("Example of an error message..."));
		  OLM_W(("Example of a Warning message..."));


		  ss::system::UInt a;
		  ss::system::UInt b;
				

			for (size_t i = 0 ; i < num_samples ; i++)
			{
			  if( ( i%10000 ) == 0)
			    operationController->reportProgress( (double) i / (double) num_samples );


				a = i;
				b = i;

				writer->emit( 0 , &a , &b );
			}
		
		  OLM_T( LMT_User01 , ("example.generator finish with %d samples", num_samples));

		}



	};


} // end of namespace ss
} // end of namespace example

#endif
