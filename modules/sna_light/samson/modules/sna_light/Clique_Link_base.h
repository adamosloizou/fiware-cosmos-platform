
/**
 File autogenerated with samsonModuleParser, please do not edit
*/

#ifndef _H_SAMSON_sna_light_Clique_Link_BASE
#define _H_SAMSON_sna_light_Clique_Link_BASE


#include <samson/modules/sna_light/Clique.h>
#include <samson/modules/system/Float.h>


namespace samson{
namespace sna_light{


	class Clique_Link_base : public samson::DataInstance{

	public:
	::samson::sna_light::Clique clique;
	::samson::system::Float weight;

	Clique_Link_base() : samson::DataInstance(){
	}

	~Clique_Link_base() {
	}

	int parse(char *data){
		int offset=0;
		{ //Parsing clique
			offset += clique.parse(data+offset);
		}

		{ //Parsing weight
			offset += weight.parse(data+offset);
		}

		return offset;
	}

	int serialize(char *data){
		int offset=0;
		{ //Serializing clique
			offset += clique.serialize(data+offset);
		}

		{ //Serializing weight
			offset += weight.serialize(data+offset);
		}

		return offset;
	}

	static inline int size(char *data){
		int offset=0;
		{ //Sizing clique
			offset += ::samson::sna_light::Clique::size(data+offset);
		}

		{ //Sizing weight
			offset += ::samson::system::Float::size(data+offset);
		}

		return offset;
	}

	int hash(int max_num_partitions){
		{ //Partitioning clique
			return clique.hash(max_num_partitions);
		}

	}

	inline static int compare(char * data1 , char *data2 , size_t *offset1 , size_t *offset2 ){
		{ // comparing clique
			int tmp = ::samson::sna_light::Clique::compare(data1,data2,offset1 , offset2);
			if( tmp != 0) return tmp;
		}   //  clique compared 
		{ // comparing weight
			int tmp = ::samson::system::Float::compare(data1,data2,offset1 , offset2);
			if( tmp != 0) return tmp;
		}   //  weight compared 
		return 0; //If everything is equal
	}

	inline static int compare( char* data1 , char* data2 )
	{
		size_t offset_1=0;
		size_t offset_2=0;
		return compare( data1 , data2 , &offset_1 , &offset_2 );
	}




	void copyFrom( Clique_Link_base *other ){
		{ //Copying clique
			clique.copyFrom(&other->clique);
		}

		{ //Copying weight
			weight.copyFrom(&other->weight);
		}

	};

	std::string str(){
		std::ostringstream o;
				{ //Texting clique
			o << clique.str();
		}

		o<<" ";
				{ //Texting weight
			o << weight.str();
		}

		o<<" ";
		return o.str();
	}

	}; //class Clique_Link_base

} // end of namespace samson
} // end of namespace sna_light

#endif
