
/**
 File autogenerated with samsonModuleParser. Please, edit to complete this operation
*/

#ifndef _H_SAMSON_web_parse_web_hits
#define _H_SAMSON_web_parse_web_hits


#include <samson/module/samson.h>
#include <samson/modules/system/String.h>
#include <samson/modules/system/UInt.h>
#include <samson/modules/system/SimpleParser.h>

namespace samson{
namespace web{


   class parse_web_hits : public samson::system::SimpleParser
	{

	   samson::system::String key;
	   samson::system::UInt value;

	public:


//  INFO_MODULE
// If interface changes and you do not recreate this file, you will have to update this information (and of course, the module file)
// Please, do not remove this comments, as it will be used to check consistency on module declaration
//
//  output: system.String system.UInt
// 
//  END_INFO_MODULE

		void init( samson::KVWriter *writer )
		{
		}

		void parseLine( char * line , samson::KVWriter *writer )
		{
		   // Get the line in a c++ string                                                                                          
		   std::vector<char*> words;


		   split_in_words(line, words);

		   OLM_T(251, ("words %s ", words[3]));

		   samson::system::String key;
		   key.value = words[3];

		   samson::system::UInt value;
		   value.value = 1;

		   writer->emit( 0 , &key , &value);
		}

		void finish( samson::KVWriter *writer )
		{
		}



	};


} // end of namespace web
} // end of namespace samson

#endif
