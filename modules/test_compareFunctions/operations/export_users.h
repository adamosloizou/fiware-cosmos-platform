
/**
 File autogenerated with samsonModuleParser. Please, edit to complete this operation
*/

#ifndef _H_SAMSON_test_compareFunctions_export_users
#define _H_SAMSON_test_compareFunctions_export_users


#include <samson/module/samson.h>


namespace samson{
namespace test_compareFunctions{


	class export_users : public samson::ParserOut
	{

	public:


#ifdef INFO_COMMENT //Just to include a comment without conflicting anything
// If interface changes and you do not recreate this file, consider updating this information (and of course, the module file)

input: system.UInt test_compareFunctions.User  

#endif // de INFO_COMMENT

#ifdef MAX_STR_LEN
#undef MAX_STR_LEN
#endif
// Max line to be output
#define MAX_STR_LEN 2048
    char line[MAX_STR_LEN];

    		void init(TXTWriter *writer)
		{
			OLM_T(LMT_User06, ("class export_users : public samson::ParserOut: init()\n"));
			writer->emit("Hello, world!\n");
		}

		void run(KVSetStruct* inputs , TXTWriter *writer )
		{
			User user;
			int age;
			size_t expense;

			for (size_t i = 0; (i < inputs[0].num_kvs); i++)
			{
				user.parse(inputs[0].kvs[i]->value);
				if (user.age_GetAssigned())
				{
					age = user.age.value;
				}
				else
				{
					age = -1;
				}

				if (user.expense_GetAssigned())
				{
					expense = user.expense.value;
				}
				else
				{
					expense = 0;
				}
				snprintf( line , MAX_STR_LEN, "user:%lu, surname:'%s', companyId:%lu, age:%d, expense:%lu\n", user.id.value, user.surname.value.c_str(), user.companyId.value, age, expense );
				writer->emit( line );
			}
		}

    		void finish(TXTWriter *writer)
		{
			OLM_T(LMT_User06, ("class export_users : public samson::ParserOut: finish()\n"));
			writer->emit("That's all, folks\n");
		}


	};


} // end of namespace samson
} // end of namespace test_compareFunctions

#endif
