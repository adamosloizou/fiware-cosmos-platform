
/**
 File autogenerated with samsonModuleParser. Please, edit to complete this operation
*/

#ifndef _H_SAMSON_webp_parse_tid_web_logs
#define _H_SAMSON_webp_parse_tid_web_logs


#include "au/string.h"
#include <samson/module/samson.h>
#include <samson/modules/system/String.h>
#include <samson/modules/system/Void.h>
#include <samson/modules/webp/Log.h>
#include <samson/modules/system/SimpleParser.h>

namespace samson{
namespace webp{


    class parse_tid_web_logs : public samson::system::SimpleParser
	{

	   samson::system::String user;
	   samson::webp::Log log;

	public:


//  INFO_MODULE
// If interface changes and you do not recreate this file, you will have to update this information (and of course, the module file)
// Please, do not remove this comments, as it will be used to check consistency on module declaration
//
//  output: system.String webp.Log
//  
//  extendedHelp: 		Parse web logs
//  		Output: [ user Log ]
// 
//  END_INFO_MODULE

		void init( samson::KVWriter *writer )
		{
		}

        void parseLine( char * line , samson::KVWriter *writer )
        {
		   std::vector<char*> words;

           // Split input line in words
           split_in_words(line, words);

           if( words.size() < 7 )
			  return;

           // get the user id ( in this case the source ip )
		   user.value =  words[1];

		   const char* server = words[3];
		   const char* path = words[6];

		   log.url.value = au::str("%s%s" , server , path);

		   writer->emit( 0 , &user , &log);

		}

		void finish( samson::KVWriter *writer )
		{
		}



	};


} // end of namespace webp
} // end of namespace samson

#endif
