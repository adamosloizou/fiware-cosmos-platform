
/**
 File autogenerated with samsonModuleParser. Please, edit to complete this operation
 */

#ifndef _H_SAMSON_mob2_vector_sum_groupcomms
#define _H_SAMSON_mob2_vector_sum_groupcomms


#include <samson/module/samson.h>
#include <samson/modules/mob2/Bts_Counter.h>
#include <samson/modules/mob2/Node_Bts.h>
#include <samson/modules/mob2/TwoInt.h>
#include <samson/modules/system/UInt.h>



namespace samson{
namespace mob2{


class vector_sum_groupcomms : public samson::Reduce
{
	//Inputs
	Node_Bts innodebts;
	samson::system::UInt comms;
	//Outputs
	TwoInt node_bts; //      num1: node      num2: bts
	Bts_Counter counter;

public:


#ifdef INFO_COMMENT //Just to include a comment without conflicting anything
	// If interface changes and you do not recreate this file, consider updating this information (and of course, the module file)

	input: mob2.Node_Bts system.UInt
	output: mob2.TwoInt mob2.Bts_Counter

	extendedHelp: 		Add num of comms of a client in a bts by group and hour

#endif // de INFO_COMMENT

	void init(samson::KVWriter *writer )
	{
	}

	void run(  samson::KVSetStruct* inputs , samson::KVWriter *writer )
	{
		uint64_t ncoms = 0;

		innodebts.parse(inputs[0].kvs[0]->key);
		node_bts.num1.value = innodebts.phone.value;
		node_bts.num2.value = innodebts.bts.value;

		for(uint64_t i=0; i<inputs[0].num_kvs; i++)
		{
			comms.parse(inputs[0].kvs[i]->value);
			ncoms += comms.value;
		}
		counter.bts.value = innodebts.bts.value;
		counter.wday.value = innodebts.wday.value;
		counter.range.value = innodebts.range.value;
		counter.count.value = ncoms;

		writer->emit(0, &node_bts,&counter);

	}

	void finish(samson::KVWriter *writer )
	{
	}



};


} // end of namespace mob2
} // end of namespace samson

#endif
