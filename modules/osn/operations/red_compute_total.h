
/**
 File autogenerated with samsonModuleParser. Please, edit to complete this operation
*/

#ifndef _H_SAMSON_osn_red_compute_total
#define _H_SAMSON_osn_red_compute_total


#include <samson/Operation.h>
#define DEBUG_FILES
#ifdef DEBUG_FILES
#include <iostream>
#include <fstream>
#endif /* de DEBUG_FILES */



namespace ss{
namespace osn{


	class red_compute_total : public ss::Reduce
	{
                ss::system::UInt key_in;
                ss::osn::Count count;
		ss::system::UInt total_out;
                ss::system::Void void_out;


	public:


		void run(  ss::KVSetStruct* inputs , ss::KVWriter *writer )
		{
#define DEBUG_FILES
#ifdef DEBUG_FILES
                {
                std::string filename = "/tmp/red_compute_total.log";
                std::ofstream fs(filename.c_str(), std::ios::app);
                fs << "Select from inputs[0].num_kvs: " << inputs[0].num_kvs << std::endl;
                fs.close();
                }
#endif /* de DEBUG_FILES */

			total_out.value = 0;
                        for (size_t i = 0; (i < inputs[0].num_kvs); i++)
                        {
                                key_in.parse(inputs[0].kvs[i]->key);
                                count.parse(inputs[0].kvs[i]->value);

				total_out.value += count.count.value;

                        }
			writer->emit(0, &total_out, &void_out);
		}


	};


} // end of namespace ss
} // end of namespace osn

#endif
