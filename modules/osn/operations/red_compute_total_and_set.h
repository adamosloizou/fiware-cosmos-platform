
/**
 File autogenerated with samsonModuleParser. Please, edit to complete this operation
 */

#ifndef _H_SAMSON_osn_red_compute_total_and_set
#define _H_SAMSON_osn_red_compute_total_and_set


#include <samson/module/samson.h>





namespace samson{
namespace osn{


class red_compute_total_and_set : public samson::Reduce
{
	samson::system::UInt key_in;
	samson::system::UInt total_in;


public:


	void run(  samson::KVSetStruct* inputs , samson::KVWriter *writer )
	{
		samson::system::UInt total_out;


		total_out.value = 0;
		for (size_t i = 0; (i < inputs[0].num_kvs); i++)
		{
			key_in.parse(inputs[0].kvs[i]->key);
			total_in.parse(inputs[0].kvs[i]->value);



			total_out.value += total_in.value;

		}


		environment->set("osn.total_count", total_out.str());

		std::string check = environment->get("osn.total_count", "1");



	}


};


} // end of namespace samson
} // end of namespace osn

#endif
