
/**
 File autogenerated with samsonModuleParser. Please, edit to complete this operation
*/

#ifndef _H_SAMSON_osn_map_urls_to_kv_to_compute_sites_visited
#define _H_SAMSON_osn_map_urls_to_kv_to_compute_sites_visited


#include <samson/module/samson.h>
#include <string>


namespace samson{
namespace osn{


	class map_urls_to_kv_to_compute_sites_visited : public samson::Map
	{
		samson::system::UInt64 msisdn;
		samson::osn::URLConnection  connect;
		samson::system::String key_out;
		samson::system::UInt value_out;

	public:


		void run(  samson::KVSetStruct* inputs , samson::KVWriter *writer )
		{
			if (inputs[0].num_kvs == 0)
			{
				return;
			}

			for (size_t i=0; (i < inputs[0].num_kvs); i++)
			{
				msisdn.parse(inputs[0].kvs[i]->key);
				connect.parse(inputs[0].kvs[i]->value);

				if (strcasestr(connect.userAgent.value.c_str(), "iphone"))
				{
					key_out.value.assign(connect.url.url_host.value);
					value_out.value = 1;
					writer->emit(0, &key_out, &value_out);
				}
			}
                        samson::system::UInt key_total;
                        samson::system::UInt val_total;
                        key_total.value = 1;
                        val_total.value = inputs[0].num_kvs;
                        writer->emit(1, &key_total, &val_total);
		}

	};


} // end of namespace samson
} // end of namespace osn

#endif
