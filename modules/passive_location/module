Module passive_location
{
	title	"Passive Location pilot ( mongoDB connection )"
	author	"Andreu & Ken mail:<andreu@tid.es>"
	version "0.1"
}

data Record
{
	system.UInt     imsi;
	system.UInt     imei;
	system.TimeUnix timestamp;
	system.UInt32   cell_id;
}


# ------------------------------------------------------------
# Parse input data to generate mobility.CellRecords
# ------------------------------------------------------------

parser parse_xml_cdrs
{
	out system.UInt passive_location.Record   

	helpLine "Parse input cdrs from Arkanum platform. Note that output key is cellid at the output"
}

map get_mobility_cell_records
{
	in system.UInt passive_location.Record
	out system.UInt32 mobility.CellRecord

	helpLine "Transform passive_location.Record into a mobility.CellRecord"
}

# ------------------------------------------------------------
# Parse cell's table
# ------------------------------------------------------------

parser parse_cell_info
{
	out system.UInt32 mobility.Cell

	helpLine "Parse input txt file containing cell information( latitude & longitude )"
}

# ------------------------------------------------------------
# Import data from MongoDB
# ------------------------------------------------------------

generator mongo_location_import
{
	out system.UInt mobility.Record

	helpLine "Import passive location data from a mongoDb server at 'mongo.ip' from table 'mongo.table'"
}

generator mongo_latlong_import
{
	out system.UInt mobility.Record
	helpLine "Import passive location 'latlong' data from a mongoDb server at 'mongo.ip' from table 'mongo.table'"
}

# ------------------------------------------------------------
# Export data from MongoDB
# ------------------------------------------------------------

map mongo_location_export
{
	in system.UInt mobility.Record
	helpLine "Export passive location data to a mongoDb server at 'mongo' to table 'mongo_table'"
}


# ------------------------------------------------------------
# Script to init stream operations
# ------------------------------------------------------------

script init_stream_operations
{
	code
	{
		# Queues;

		alias [q1]     01.in_xml_cdrs;
		alias [q2]     02.xml_records;
		alias [q3]     03.cell_records;		
		alias [cells]  04.cells;
		alias [r1]     20.records;
		alias [r2]     20.records2;

		# Operations;

		alias [parser_xml]          00.parser_xml_cdrs;
		alias [get_cell_records]    10.get_mobility_cell_records;
		alias [join_cells]          20.mobility_records;
		alias [export_history]      30.export_mongo;
		alias [export_lkl]          31.export_mongo_lkl;


		add_stream_operation  [parser_xml]        passive_location.parse_xml_cdrs                [q1]           [q2];
		add_stream_operation  [get_cell_records]  passive_location.get_mobility_cell_records     [q2]           [q3];

		add_stream_operation  [join_cells]        mobility.reduce_cell_latitude_longitude        [q3] [cells]   [r1],[r2] [cells] -forward;

		add_stream_operation  [export_history]    passive_location.mongo_location_export  [r1];
		add_stream_operation  [export_lkl]        passive_location.mongo_location_export  [r2];

		set_stream_operation_property   [export_history]      mongo.ip                  samson05;
		set_stream_operation_property   [export_history]      mongo.db                  PassiveLocation;
		set_stream_operation_property   [export_history]      mongo.collection          History;

		set_stream_operation_property   [export_lkl]  mongo.ip                  samson08;
		set_stream_operation_property   [export_lkl]  mongo.db                  PassiveLocation;
		set_stream_operation_property   [export_lkl]  mongo.collection          LastKnownLocation;
		set_stream_operation_property   [export_lkl]  mongo.history             0;


    }
}


script demo
{
	code
	{
		remove_all_stream;
		init_stream passive_location.init_stream_operations;
	}
}


